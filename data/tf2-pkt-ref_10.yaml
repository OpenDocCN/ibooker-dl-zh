- en: 'Chapter 10\. Improving the Modeling Experience: Fairness Evaluation and Hyperparameter
    Tuning'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。改善建模体验：公平性评估和超参数调整
- en: Getting ML models to work well is an iterative process. It requires many rounds
    of tuning the model parameters, architectures, and training durations. While you
    have to work with the data that’s available, of course, ideally you want the training
    data to be balanced. In other words, it should contain an equal number of classes
    or uniform distribution across ranges.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 使ML模型运行良好是一个迭代过程。它需要多轮调整模型参数、架构和训练持续时间。当然，您必须使用可用的数据，但理想情况下，您希望训练数据是平衡的。换句话说，它应该包含相等数量的类或跨范围的均匀分布。
- en: Why is this balance important? Because if any features in the data are skewed,
    then the trained model will reproduce that skew. This is known as *model bias*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么这种平衡很重要？因为如果数据中的任何特征存在偏差，那么训练的模型将重现该偏差。这被称为*模型偏差*。
- en: Imagine that you’re training a model to recognize dogs. If there are 99 negative
    cases and 1 positive case in your training images—that is, only one actual dog
    image—then the model will simply predict a negative result every time, with a
    99% chance of being correct. The model learns to minimize the errors it makes
    during training, and the easiest way to do so is to produce a negative prediction—in
    short, to guess “not a dog” every time. This is known as the data imbalance problem,
    and it is prevalent in the real world; it’s also a complicated subject to which
    I cannot do justice here. It requires many different approaches, including adding
    synthetic data through a technique known as *data augmentation*.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，您正在训练一个识别狗的模型。如果您的训练图像中有99个负例和1个正例，即只有一张实际的狗图像，那么模型将每次都简单地预测负结果，有99%的准确率。模型学会了在训练过程中最小化错误，最简单的方法是产生一个负预测，简而言之，每次都猜“不是狗”。这被称为数据不平衡问题，在现实世界中很普遍；这也是一个复杂的主题，我无法在这里充分阐述。它需要许多不同的方法，包括通过一种称为*数据增强*的技术添加合成数据。
- en: In this chapter, I’ll introduce you to Fairness Indicators, a new tool (as of
    this writing) to evaluate model bias. It is part of the TensorFlow Model Analysis
    library and is available for Jupyter Notebooks.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我将向您介绍公平性指标，这是一个用于评估模型偏差的新工具（截至撰写本文）。它是TensorFlow Model Analysis库的一部分，并可用于Jupyter笔记本。
- en: You will also learn how to perform *hyperparameter tuning*. *Hyperparameters*
    are variables in the model architecture and model training process. Sometimes
    you want to experiment with different values or implementation choices, but you
    don’t know which are best for your model. To find out, you’ll need to evaluate
    model performance over many combinations of hyperparameters. I’ll show you a new
    way of doing hyperparameter tuning using the Keras Tuner library. This library
    works seamlessly with TensorFlow 2’s Keras API. It’s very flexible and easy to
    set up as part of the training process. We’ll start by setting up Fairness Indicators
    in the next section.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将学习如何执行*超参数调整*。*超参数*是模型架构和模型训练过程中的变量。有时您想要尝试不同的值或实现选择，但不知道哪个对您的模型最好。为了找出，您需要评估许多超参数组合的模型性能。我将向您展示如何使用Keras
    Tuner库进行超参数调整的新方法。该库与TensorFlow 2的Keras API无缝配合。它非常灵活，易于设置为训练过程的一部分。我们将在下一节开始设置公平性指标。
- en: Tip
  id: totrans-6
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: Model bias, and its real-life consequences, are well known. One of the most
    notable examples of model bias is the COMPAS (Correctional Offender Management
    Profiling for Alternative Sanctions) framework, which was used in US court systems
    to predict recidivism. Because of the training data, the model [predicted twice
    as many false positives](https://oreil.ly/1FdFy) for Black defendants as for white
    defendants. If you are interested in learning more about fairness, take a look
    at [*Practical Fairness* by Aileen Nielsen](https://oreil.ly/V3yjB) (O’Reilly,
    2020) and [*AI Fairness* by Trisha Mahoney, Kush R. Varshney, and Michael Hind](https://oreil.ly/tpoTl)
    (O’Reilly, 2020).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 模型偏差及其现实生活后果是众所周知的。模型偏差最显著的例子之一是COMPAS（Correctional Offender Management Profiling
    for Alternative Sanctions）框架，该框架曾用于美国法院系统预测累犯。由于训练数据，该模型对黑人被告的[假阳性预测是白人被告的两倍](https://oreil.ly/1FdFy)。如果您对公平性有兴趣，可以查看Aileen
    Nielsen的《*Practical Fairness*》（O’Reilly，2020）和Trisha Mahoney、Kush R. Varshney和Michael
    Hind的《*AI Fairness*》（O’Reilly，2020）。
- en: Model Fairness
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型公平性
- en: 'You will need to install the TensorFlow Model Analysis library, which was not
    a part of the regular TensorFlow distribution as of TensorFlow 2.4.1\. You can
    download and install it via the `pip install` command:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装TensorFlow Model Analysis库，该库不是TensorFlow 2.4.1常规发行版的一部分。您可以通过`pip install`命令下载并安装它：
- en: '[PRE0]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You will also need to install the `protobuf` library to parse your choice of
    model metrics:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要安装`protobuf`库来解析您选择的模型指标：
- en: '[PRE1]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This library enables you to display and review model statistics on test data
    so that you can detect any bias in the model’s prediction.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 该库使您能够在测试数据上显示和审查模型统计信息，以便检测模型预测中的任何偏差。
- en: To illustrate this, we will again use the *Titanic* dataset. In [Chapter 3](ch03.xhtml#data_preprocessing),
    you used this dataset to build a model to predict passenger survival. This small
    dataset contains several features about each passenger and is a good starting
    point here.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，我们将再次使用*Titanic*数据集。在[第3章](ch03.xhtml#data_preprocessing)中，您使用此数据集构建了一个模型来预测乘客的生存。这个小数据集包含有关每位乘客的几个特征，是一个很好的起点。
- en: 'We see survival as a discrete outcome: someone either survived or did not.
    However, for a model, what we really mean is the probability of survival based
    on the given features of a passenger. Recall that the model you built is a logistic
    regression model, and the output is a probability of an outcome that is binary
    (survived or not). One [Google course](https://oreil.ly/8ciQJ) puts it this way:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将生存视为一个离散的结果：某人要么幸存，要么不幸存。然而，对于模型来说，我们真正意味着的是基于乘客的给定特征的生存概率。回想一下，您构建的模型是一个逻辑回归模型，输出是一个二元结果（幸存或未幸存）的概率。一门[Google课程](https://oreil.ly/8ciQJ)这样表达：
- en: In order to map a logistic regression value to a binary category, you must define
    a *classification threshold* (also called the *decision threshold*). A value above
    that threshold indicates [a positive]; a value below indicates [a negative]. It
    is tempting to assume that the classification threshold should always be 0.5,
    but thresholds are problem-dependent, and are therefore values that you must tune.
  id: totrans-16
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了将逻辑回归值映射到一个二进制类别，您必须定义一个*分类阈值*（也称为*决策阈值*）。高于该阈值的值表示[积极]；低于该值表示[消极]。人们很容易假设分类阈值应该始终为0.5，但阈值是依赖于问题的，并且是您必须调整的值。
- en: It is up to the user to decide the threshold. An intuitive way to understand
    this is that a survival probability of 0.51 doesn’t guarantee survival; it still
    implies a 49% chance of *not* surviving. Likewise, a survival probability of 0.49
    is not zero. A good threshold is one that minimizes misclassification in both
    directions. Therefore, the threshold is a user-determined parameter. Typically,
    in your model training and testing process, you will try a few different threshold
    values and see which one gives you the most correct classifications in the test
    data. For this dataset, you might start with a list of different threshold values,
    such as 0.1, 0.5, and 0.9\. For each threshold, a positive result—that is, a prediction
    probability that falls above the threshold—indicates a prediction that this individual
    survived.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 决定阈值是用户的责任。理解这一点的直观方式是，生存概率为0.51并不保证生存；它仍然意味着49%的*不*幸存的机会。同样，生存概率为0.49并不是零。一个好的阈值是能够最小化两个方向的误分类。因此，阈值是一个用户确定的参数。通常，在您的模型训练和测试过程中，您将尝试几个不同的阈值，并查看哪个在测试数据中给出了最正确的分类。对于这个数据集，您可以从不同的阈值列表开始，例如0.1、0.5和0.9。对于每个阈值，一个积极的结果——即，一个预测概率高于阈值的预测——表示这个个体幸存的预测。
- en: Recall that the *Titanic* dataset looks like what is shown in [Figure 10-1](#titanic_dataset_for_training).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，*Titanic*数据集看起来像[图10-1](#titanic_dataset_for_training)所示。
- en: '![Titanic dataset for training](Images/t2pr_1001.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![用于训练的Titanic数据集](Images/t2pr_1001.png)'
- en: Figure 10-1\. *Titanic* dataset for training
  id: totrans-20
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-1\. *用于训练的Titanic*数据集
- en: Each row in [Figure 10-1](#titanic_dataset_for_training) represents a passenger
    and several corresponding features. The model’s goal is to predict the value in
    the “survived” column based on these features. In training data, this column is
    binary, with 1 indicating the passenger survived and 0 indicating the passenger
    did not survive. Data for testing is also provided by the *Titanic* dataset as
    a separate partition.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[图10-1](#titanic_dataset_for_training)中的每一行代表一个乘客和几个相应的特征。模型的目标是根据这些特征预测“survived”列中的值。在训练数据中，这一列是二进制的，1表示乘客幸存，0表示乘客未幸存。测试数据也是由*Titanic*数据集提供的一个单独的分区。'
- en: Model Training and Scoring
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型训练和评分
- en: 'Let’s pick up where we left off after [“Preparing Tabular Data for Training”](ch03.xhtml#preparing_tabular_data_for_training),
    in which you completed the model training. Run these import statements again before
    you continue:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从[“为训练准备表格数据”](ch03.xhtml#preparing_tabular_data_for_training)之后继续，您已经完成了模型训练。在继续之前再次运行这些导入语句：
- en: '[PRE2]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once the model is trained (which you did in [Chapter 3](ch03.xhtml#data_preprocessing)),
    you can use it to predict the survival probability of each passenger in the test
    dataset:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦模型训练完成（您在[第3章](ch03.xhtml#data_preprocessing)中完成了），您可以使用它来预测测试数据集中每个乘客的生存概率：
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This command, `prediction_raw`, produces a NumPy array with a probability value
    for each passenger:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令`prediction_raw`会生成一个NumPy数组，其中包含每个乘客的概率值：
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now let’s make this array into a Python list and append it as a new column
    to the test dataset:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们将这个数组转换成一个Python列表，并将其附加为测试数据集的新列：
- en: '[PRE5]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The new column, called “predicted,” is the last column. For visibility, you
    might want to reorder the columns by moving this last column to be first, next
    to the ground truth column, “survived.”
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 新列名为“predicted”，是最后一列。为了可见性，您可能希望通过将这最后一列移动到第一列旁边的“survived”列来重新排列列。
- en: '[PRE6]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Now `test_df` looks like [Figure 10-2](#titanic_test_dataset_with_predictions_ap),
    and we can easily compare the model’s predictions to the real-life outcomes.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`test_df`看起来像[图10-2](#titanic_test_dataset_with_predictions_ap)，我们可以轻松地将模型的预测与真实结果进行比较。
- en: '![Titanic test dataset with predictions appended](Images/t2pr_1002.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![附加了预测的Titanic测试数据集](Images/t2pr_1002.png)'
- en: Figure 10-2\. *Titanic* test dataset with predictions appended
  id: totrans-35
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-2\. *附加了预测的Titanic*测试数据集
- en: Fairness Evaluation
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 公平性评估
- en: To investigate the fairness of your model’s predictions, you need a good understanding
    of your use case and the data you’ve used for training. Just looking at data alone
    probably won’t give you enough context, background, or situational awareness to
    investigate fairness or model bias. Therefore, it is paramount that you understand
    the use case, the purpose of the model, who is using it, and the potential real-world
    impact should the model get the prediction wrong.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要调查模型预测的公平性，您需要对您的用例和用于训练的数据有一个很好的理解。仅仅看数据本身可能不会给您足够的背景、上下文或情境意识来调查公平性或模型偏差。因此，您必须了解用例、模型的目的、谁在使用它以及如果模型预测错误可能产生的潜在现实影响，这是至关重要的。
- en: 'The *Titanic* had three cabin classes: first class was the most expensive,
    second class was in the middle, and third class, or steerage, was the least expensive
    and in the lower decks. It is well documented that most passengers who survived
    were female and in first-class cabins. We also know that gender and class played
    an important role in the selection process for getting on the lifeboats. That
    selection process prioritized women and children over men. Because this background
    is so well known, this dataset is suitable as a didactic example to investigate
    model bias.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '*Titanic*有三个船舱等级：头等舱是最昂贵的，二等舱位于中间，而三等舱，或者称为船舱，是最便宜的并位于下层甲板。有充分的证据表明，大多数幸存者是女性，并且在头等舱。我们也知道性别和等级在上救生艇的选择过程中起着重要作用。该选择过程优先考虑了妇女和儿童，而不是男性。由于这个背景是如此出名，这个数据集适合作为一个教学示例来调查模型偏差。'
- en: 'When making predictions, as I mentioned in the introduction, a model inevitably
    recapitulates any bias or imbalance in the training data. So an interesting question
    to lead off our investigation would be this: how well does the model predict passenger
    survival in different genders and classes?'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行预测时，正如我在介绍中提到的，模型不可避免地重现训练数据中的任何偏见或不平衡。因此，我们调查的一个有趣问题是：模型在不同性别和等级的乘客生存预测方面表现如何？
- en: 'Let’s start with the following code block for `eval_config`, which defines
    our investigation:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从以下代码块开始`eval_config`，定义我们的调查：
- en: '[PRE7]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[![1](Images/1.png)](#comarker1)'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[![1](Images/1.png)](#comarker1)'
- en: The `eval_config` object has to be formatted as a protobuf data type, which
    is why you needed to import `text_format` to parse the definition.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`eval_config`对象必须格式化为协议缓冲区数据类型，这就是为什么您需要导入`text_format`来解析定义。'
- en: '[![2](Images/2.png)](#comarker2)'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '[![2](Images/2.png)](#comarker2)'
- en: 'Specify `model_specs` to document the two columns that you want to compare:
    “predicted” and “survived.”'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 指定`model_specs`以记录要比较的两列：“predicted”和“survived”。
- en: '[![3](Images/3.png)](#comarker3)'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[![3](Images/3.png)](#comarker3)'
- en: Define the metrics for classification accuracy and the three thresholds for
    assigning survival status based on survival probability.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 定义分类准确性的指标以及基于生存概率分配生存状态的三个阈值。
- en: '[![4](Images/4.png)](#comarker4)'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[![4](Images/4.png)](#comarker4)'
- en: 'This is where you declare which features you want to use to investigate model
    bias. `feature_keys` in `slicing_specs` holds a list of features to examine for
    bias: in our case, “sex” and “class.” Since there are two unique values for sex
    and three different classes, the fairness indicators will evaluate model bias
    for six different interaction groups. If only one feature were listed, the fairness
    indicators would evaluate bias on that feature alone.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您声明要用来调查模型偏差的特征的地方。`slicing_specs`中的`feature_keys`保存要检查偏差的特征列表：在我们的案例中是“sex”和“class”。由于性别有两个唯一值，而不同的班级有三个不同的类别，公平性指标将评估六个不同交互组的模型偏差。如果只列出一个特征，公平性指标将仅评估该特征上的偏差。
- en: '[![5](Images/5.png)](#comarker5)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[![5](Images/5.png)](#comarker5)'
- en: All this information is wrapped inside `“““ ”””` triple double quotes, which
    makes it a plain-text representation. This text string is merged into a `tfma.EvalConfig`
    message.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些信息都包含在`“““ ”””`三重双引号中，这使得它成为一个纯文本表示。这个文本字符串被合并到`tfma.EvalConfig`消息中。
- en: 'Now define an output path to store the fairness indicator’s results:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在定义一个输出路径来存储公平性指标的结果：
- en: '[PRE8]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Then run the model analysis routine:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 然后运行模型分析例程：
- en: '[PRE9]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: From the preceding code, you can see that `test_df` is the test data, with prediction
    added to it. You will use the `tfma.analyze_raw_data` function to perform the
    fairness analysis.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的代码中，您可以看到`test_df`是测试数据，其中添加了预测。您将使用`tfma.analyze_raw_data`函数执行公平性分析。
- en: Tip
  id: totrans-57
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 提示
- en: 'If you are running this example in a local Jupyter Notebook, you need to enable
    the Jupyter Notebook to display the Fairness Indicators GUI. In the next cell,
    input the following command:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在本地Jupyter Notebook中运行此示例，则需要启用Jupyter Notebook以显示公平性指标GUI。在下一个单元格中，输入以下命令：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If you are using a Google Colab notebook, this step is not necessary.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用Google Colab笔记本，则此步骤是不必要的。
- en: Rendering Fairness Indicators
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染公平性指标
- en: 'Now you are ready to take a look at your `eval_result`. Run this command:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好查看您的`eval_result`。运行此命令：
- en: '[PRE11]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: You will see the Fairness Indicators interactive GUI in your notebook (see [Figure 10-3](#fairness_indicators_interactive_gui)).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在笔记本中看到公平性指标的交互式GUI（参见[图10-3](#fairness_indicators_interactive_gui)）。
- en: '![Fairness Indicators interactive GUI](Images/t2pr_1003.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![公平性指标交互式GUI](Images/t2pr_1003.png)'
- en: Figure 10-3\. Fairness Indicators interactive GUI
  id: totrans-66
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-3. 公平性指标交互式GUI
- en: In this figure, the metric of false-positive rate is selected.^([1](ch10.xhtml#ch10fn05))
    In the context of the *Titanic* dataset, a *false positive* means that the model
    predicted the passenger would survive, but in reality they did not.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个图中，选择了假阳性率指标。在*Titanic*数据集的背景下，*假阳性*表示模型预测乘客会生存，但实际上他们没有。
- en: Let’s take a look at this GUI. In the left panel (as shown in [Figure 10-3](#fairness_indicators_interactive_gui)),
    you have all the metrics available. In the right panel, you see a bar chart for
    the selected metric. Feature combinations (sex and class) in the `slice_specs`
    are indicated.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个GUI。在左侧面板（如[图10-3](#fairness_indicators_interactive_gui)所示），您可以看到所有可用的指标。在右侧面板中，您会看到所选指标的条形图。在`slice_specs`中指示特征组合（性别和等级）。
- en: At a threshold of 0.5 (where a probability greater than 0.5 is considered a
    positive—that is, survival), the false-positive rate is high for male passengers
    in first class and female passengers in second and third class.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在阈值为0.5（概率大于0.5被视为正面，即生存）时，头等舱男性乘客和二三等舱女性乘客的假阳性率很高。
- en: In the table below the bar chart, you have a more detailed view of actual metric
    and sample size (see [Figure 10-4](#the_fairness_indicators_dashboard_showin)).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '在条形图下方的表格中，您可以更详细地查看实际指标和样本大小（参见[图10-4](#the_fairness_indicators_dashboard_showin)）。 '
- en: '![The Fairness Indicators dashboard showing the false positive summary](Images/t2pr_1004.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![显示假阳性摘要的公平性指标仪表板](Images/t2pr_1004.png)'
- en: Figure 10-4\. The Fairness Indicators dashboard showing the false-positive summary
  id: totrans-72
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-4\. 显示假阳性摘要的公平性指标仪表板
- en: Unsurprisingly, the model correctly predicts that all first-class female passengers
    survived, as you can see from the ground truth (“survived”) column.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 毫不奇怪，模型正确预测了所有头等舱女性乘客的幸存，您可以从实际情况（“survived”）列中看到。
- en: 'So why do second-class and third-class male passengers produce a false-positive
    rate of 0? Let’s look at the actual outcome from `test_df` to understand why.
    Execute the following command to select male passengers in second-class accommodations:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 那么为什么二等和三等舱的男性乘客产生了0的假阳性率？让我们查看`test_df`中的实际结果以了解原因。执行以下命令选择二等舱住宿的男性乘客：
- en: '[PRE12]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then display `sel_df`:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然后显示`sel_df`：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[Figure 10-5](#the_titanic_test_datasetapostrophes_seco) shows the resulting
    list of all second-class male passengers. Let’s use it to look for false positives.
    Is there any passenger in this group who did not survive (that is, the “survived”
    column displays 0) for whom the model predicted a probability greater than the
    threshold (0.5)? No. So Fairness Indicators states that the rate of false positives
    is 0.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[图10-5](#the_titanic_test_datasetapostrophes_seco)显示了所有二等舱男性乘客的结果列表。让我们用它来寻找假阳性。在这个组中，是否有任何乘客没有幸存（即，“survived”列显示0），但模型预测的概率大于阈值（0.5）？没有。因此，公平性指标表明假阳性率为0。'
- en: '![The Titanic test dataset’s second-class male passengers](Images/t2pr_1005.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![泰坦尼克号测试数据集的二等舱男性乘客](Images/t2pr_1005.png)'
- en: Figure 10-5\. The *Titanic* test dataset’s second-class male passengers
  id: totrans-80
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-5\. *泰坦尼克号*测试数据集的二等舱男性乘客
- en: 'You may notice that some second-class male passengers did survive, yet the
    model predicted their probability of survival as less than the threshold of 0.5\.
    These are known as *false-negative* cases: they actually survived, but the model
    predicted they didn’t. In short, they beat the odds! So let’s uncheck the false-positive
    metric and check our false-negative metric to see what it looks like across gender
    and class combinations (see [Figure 10-6](#the_titanic_test_datasetapostrophes_fals)).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能会注意到，一些二等舱男性乘客确实幸存了，但模型预测他们的生存概率低于0.5的阈值。这些被称为*假阴性*案例：他们实际上幸存了，但模型预测他们没有。简而言之，他们打破了规律！因此，让我们取消假阳性指标并检查我们的假阴性指标，看看在性别和阶级组合中它是什么样子（参见[图10-6](#the_titanic_test_datasetapostrophes_fals)）。
- en: As you can see in [Figure 10-6](#the_titanic_test_datasetapostrophes_fals),
    at the current threshold of 0.5, men and boys in second and third class have a
    very high false-negative rate.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您在[图10-6](#the_titanic_test_datasetapostrophes_fals)中所看到的，在当前阈值0.5的情况下，二等和三等舱的男性和男孩有很高的假阴性率。
- en: '![The Titanic test dataset’s false negative metric](Images/t2pr_1006.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![泰坦尼克号测试数据集的假阴性指标](Images/t2pr_1006.png)'
- en: Figure 10-6\. The *Titanic* test dataset’s false-negative metric
  id: totrans-84
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-6\. *泰坦尼克号*测试数据集的假阴性指标
- en: 'This exercise makes it clear that the model exhibits bias with regard to gender
    and class. The model performs best for first-class female passengers, which reflects
    the obvious skew in the data: nearly all the first-class female passengers survived,
    while everybody else’s chances are not so clear-cut. You can examine the training
    data to confirm this skew with the following statement, which groups training
    data by the “sex,” “class,” and “survived” columns:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习清楚地表明，模型在性别和阶级方面存在偏见。该模型对头等舱女性乘客表现最佳，这反映了数据中明显的偏斜：几乎所有头等舱女性乘客都幸存了，而其他人的机会则不那么明确。您可以通过以下语句检查训练数据以确认这种偏斜，该语句将训练数据按“sex”，“class”和“survived”列分组：
- en: '[PRE14]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: This will produce the summary shown in [Figure 10-7](#summary_of_survival_count_by_passenger_g).
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这将产生[图10-7](#summary_of_survival_count_by_passenger_g)中显示的摘要。
- en: As you can see, of the 69 first-class female passengers, only two died. You
    trained your model based on this data, so it is very easy for the model to learn
    that as long as the class and sex indicators are first and female, it should predict
    a high probability of survival. You can also see that female passengers in third
    class, where 52 survived and 41 died, did not enjoy the same favorable outcome.
    This is a classic case of an imbalanced data label (the “survived” column) leading
    to model bias. Of all the possible gender–class combinations here, no other combination
    has odds as good as those of female passengers in first class. This made it more
    challenging for the model to get the prediction right.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，69名头等舱女性乘客中只有两人死亡。您根据这些数据训练了您的模型，因此模型很容易学会，只要阶级和性别指示为头等和女性，它就应该预测高概率的生存。您还可以看到，第三等舱的女性乘客中，52人幸存，41人死亡，没有享受到同样有利的结果。这是一个典型的数据标签不平衡（“survived”列）导致模型偏见的案例。在所有可能的性别-阶级组合中，没有其他组合的胜算像头等舱女性乘客那样好。这使得模型更难正确预测。
- en: '![Summary of survival count by passenger group in the Titanic training dataset](Images/t2pr_1007.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![泰坦尼克号训练数据集中乘客组的生存计数摘要](Images/t2pr_1007.png)'
- en: Figure 10-7\. Summary of survival count by passenger group in the *Titanic*
    training dataset
  id: totrans-90
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-7\. *泰坦尼克号*训练数据集中乘客组的生存计数摘要
- en: When using Fairness Indicators, you can toggle the threshold drop-down box to
    display metrics for the three different thresholds in the same bar chart, as shown
    in [Figure 10-8](#fairness_indicators_displaying_metrics_f).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用公平性指标时，您可以切换阈值下拉框以在同一条形图中显示三个不同阈值的指标，如[图10-8](#fairness_indicators_displaying_metrics_f)所示。
- en: '![Fairness Indicators displaying metrics for all thresholds](Images/t2pr_1008.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![展示所有阈值的公平性指标指标](Images/t2pr_1008.png)'
- en: Figure 10-8\. Fairness Indicators displaying metrics for all thresholds
  id: totrans-93
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图10-8\. 展示所有阈值的公平性指标指标
- en: For readability, each threshold is color coded. You can hover your cursor mouse
    over a bar to ascertain the color assignment. This helps you interpret the impact
    of different thresholds on each metric.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为了易读性，每个阈值都有颜色编码。您可以将鼠标悬停在柱状图上以确定颜色分配。这有助于您解释不同阈值对每个指标的影响。
- en: 'From this example, we can draw the following conclusions:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个例子中，我们可以得出以下结论：
- en: Passenger features such as gender and cabin class (as a stand-in for socioeconomic
    class) primarily determine the outcome.
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 乘客的特征，如性别和舱位等级（作为社会阶级的替代品），主要决定了结果。
- en: The model is much more accurate for first- and second-class female passengers
    than for any other groups, which strongly suggests that the model bias is driven
    by gender and class.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于头等舱和二等舱的女性乘客，模型的准确性要高得多，这强烈表明模型偏见是由性别和阶级驱动的。
- en: Survival probability favors a certain gender and certain classes. This is known
    as *data imbalance*, and it is consistent with historical accounts of what happened.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生存概率偏向于某些性别和某些阶级。这被称为*数据不平衡*，与历史记载的发生一致。
- en: Interactions between features such as gender and class (called *feature cross*)
    reveal a deeper level of model bias. Women and girls in the lowest (third) class
    did not have a favorable survival outcome—neither in the training data and model
    accuracy nor, tragically, in real life.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特征之间的交互作用，比如性别和阶级（称为*特征交叉*），揭示了模型偏见的更深层次。在最低（第三）阶级的妇女和女孩在训练数据和模型准确性中都没有获得有利的生存结果，更不用说在现实生活中了。
- en: You may be tempted to try to tweak your model architecture or training strategies
    when you see model bias. But the underlying problem here is the imbalance in the
    training data, which reflects real-life unequal outcomes based on gender and class.
    Without bringing about a more equitable outcome for the other gender and classes,
    fixing the model architecture or training strategies is not going to create a
    fair model.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当您看到模型偏见时，您可能会尝试调整模型架构或训练策略。但这里的根本问题是训练数据中的不平衡，这反映了基于性别和阶级的现实不平等结果。如果没有为其他性别和阶级带来更公平的结果，修复模型架构或训练策略将无法创建一个公平的模型。
- en: 'This example is a relatively simple one: the hypothesis here is that examining
    gender and class may reveal model bias and is therefore worth investigating. Because
    it is such a widely discussed historical event, most people have at least some
    awareness of the context and events leading to the *Titanic* tragedy. However,
    in many situations, formulating a hypothesis to investigate potential bias in
    data will not be straightforward. Your data might not contain personal attributes
    or personally identifiable information (PII), and you might not have the domain
    knowledge or contextual understanding of where and how the training data was collected
    and how this might affect the outcomes. Data scientists and ML model developers
    should definitely collaborate with subject matter experts to contextualize their
    training data. Sometimes, if model fairness is a primary concern, removing the
    features in question is the best and most sensible option.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子相对简单：这里的假设是检查性别和阶级可能会揭示模型偏见，因此值得调查。由于这是一个被广泛讨论的历史事件，大多数人至少对导致*泰坦尼克号*悲剧的背景和事件有一定的了解。然而，在许多情况下，制定一个假设来调查数据中潜在偏见可能并不简单。您的数据可能不包含个人属性或个人可识别信息（PII），您可能没有域知识或对训练数据的收集方式和影响结果的了解。数据科学家和ML模型开发人员应该与主题专家合作，以使他们的训练数据具有背景。有时，如果模型公平性是主要关注点，删除相关特征可能是最好和最明智的选择。
- en: Hyperparameter Tuning
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超参数调整
- en: '*Hyperparameters* are values or attributes designated to control the model
    training process. The idea is that you want to train the model with combinations
    of these values and determine the best combinations. The only way to know which
    combination is best is to try these values out, so you want an efficient way to
    iterate all combinations and narrow down the choices to the best one. Hyperparameters
    are often applied to model architecture, such as the number of nodes in a dense
    layer of the deep-learning neural network. Hyperparameters can be applied to the
    training routine, such as an optimizer that performs back propagation (which you
    learned about in [Chapter 8](ch08.xhtml#distributed_training-id00013)) during
    the training process. They can also be applied to the *learning rate*, which specifies
    how much you want to update the model with incremental changes in weights and
    bias, which in turn determines how big a step it is for back propagation to update
    weights and bias during training. Taken together, hyperparameters can be numeric
    (number of nodes, learning rate) or nonnumeric (name of optimizer).'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*超参数*是指定用于控制模型训练过程的值或属性。想法是您希望使用这些值的组合来训练模型，并确定最佳组合。知道哪种组合最好的唯一方法是尝试这些值，因此您希望以有效的方式迭代所有组合并将选择范围缩小到最佳组合。超参数通常应用于模型架构，比如深度学习神经网络中密集层中的节点数。超参数可以应用于训练例程，比如执行反向传播的优化器（您在[第8章](ch08.xhtml#distributed_training-id00013)中学到的）在训练过程中。它们还可以应用于*学习率*，指定您希望使用增量更改来更新模型的权重和偏差的程度，从而确定反向传播在训练过程中更新权重和偏差的步长有多大。综合起来，超参数可以是数值（节点数、学习率）或非数值（优化器名称）。'
- en: 'As of TensorFlow distribution 2.4.1, the Keras Tuner library was not yet part
    of the standard distribution. That means you’ll need to install it. You can run
    this installation statement in your command terminal or Google Colab notebook:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 截至TensorFlow分发2.4.1版本，Keras Tuner库尚未成为标准分发的一部分。这意味着您需要安装它。您可以在命令终端或Google Colab笔记本中运行此安装语句：
- en: '[PRE15]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'If running it within a Jupyter Notebook cell, use this version:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在Jupyter Notebook单元格中运行它，请使用此版本：
- en: '[PRE16]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The exclamation point (!) tells the Notebook cell to interpret this as a command
    rather than as Python code.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 感叹号（！）告诉笔记本单元格将其解释为命令而不是Python代码。
- en: 'Once the installation is complete, you will import it as usual. Notice that
    while the library name is hyphenated when you install it, the hyphen is not used
    in the import statement:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，您将像往常一样导入它。请注意，当您安装库时，库名称是带连字符的，但在导入语句中不使用连字符：
- en: '[PRE17]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'From the Keras Tuner’s perspective, hyperparameters have three data types:
    integer, item choice (a list of discrete values or objects), and floating point.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 从Keras Tuner的角度来看，超参数有三种数据类型：整数、项目选择（一组离散值或对象）和浮点数。
- en: Integer Lists as Hyperparameters
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 整数列表作为超参数
- en: 'It’s easier to see how to use Keras Tuner through examples, so let’s say you
    want to try different numbers of nodes in a dense layer. First you’ll define the
    possible numbers, then pass that list to the dense layer’s definition:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 通过示例更容易看到如何使用Keras Tuner，所以假设您想尝试在密集层中使用不同数量的节点。首先定义可能的数字，然后将该列表传递给密集层的定义：
- en: '[PRE18]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the preceding code, `hp.Int` defines an alias: `hp_node_count`. This alias
    contains a list of integers (16, 24, and 32), which you pass to the `Dense` layer
    as `units`. Your goal is to see which number works the best.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述代码中，`hp.Int`定义了一个别名：`hp_node_count`。这个别名包含一个整数列表（16、24和32），您将其作为`units`传递给`Dense`层。您的目标是看哪个数字效果最好。
- en: Item Choice as Hyperparameters
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 项目选择作为超参数
- en: 'Another way to set hyperparameters is to put all selections in a list as discrete
    items, or choices. This is accomplished with the `hp.Choice` function:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 设置超参数的另一种方法是将所有选择放在一个列表中作为离散项或选择。这可以通过`hp.Choice`函数实现：
- en: '[PRE19]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Here is an example of specifying an activation function by names:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是通过名称指定激活函数的示例：
- en: '[PRE20]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Floating-Point Values as Hyperparameters
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浮点值作为超参数
- en: 'In many cases, you’ll want to try different decimal values in the training
    routine. This is very common if you want to select a learning rate for the optimizer.
    To do so, use this command:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，您可能希望在训练例程中尝试不同的小数值。如果您想为优化器选择学习率，这是非常常见的。要这样做，请使用以下命令：
- en: '[PRE21]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: End-to-End Hyperparameter Tuning
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 端到端超参数调整
- en: Hyperparameter tuning is a time-consuming process. It involves trying multiple
    combinations, with each combination trained to the same number of epochs. For
    a “brute force” approach, you would have to loop (iterate) through each combination
    of hyperparameters and *then* launch the training routine.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 超参数调整是一个耗时的过程。它涉及尝试多种组合，每种组合都经过相同数量的epochs训练。对于“蛮力”方法，您需要循环遍历每个超参数组合，*然后*启动训练例程。
- en: 'The advantage of using Keras Tuner is its early-stop implementation: if a particular
    combination doesn’t seem to improve the results, it will terminate the training
    routine and move to the next combination. This helps reduce total training time.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Keras Tuner的优势在于其提前停止实现：如果特定组合似乎没有改善结果，它将终止训练例程并转移到下一个组合。这有助于减少总体训练时间。
- en: Next, you’re going to see how to perform and optimize hyperparameter searches
    using a strategy known as *hyperband search*. Hyperband search utilizes the principle
    of successive reduction during training. In each loop through all hyperparameter
    combinations, the algorithm ranks how well the model performed for all combinations
    and discards the worse half of the parameter combinations. The better half of
    combinations will receive more processor cores and memory in the next round. This
    continues until the last combination remains, eliminating all but the best hyperparameter
    combination.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将看到如何使用一种称为*超带搜索*的策略执行和优化超参数搜索。超带搜索利用训练过程中的逐渐减少原则。在每次循环中，算法会对所有超参数组合的模型表现进行排名，并丢弃参数组合中较差的一半。下一轮中，较好的组合将获得更多的处理器核心和内存。这将一直持续到最后一种组合保留下来，消除所有但最佳超参数组合。
- en: 'It’s a bit like a [playoff bracket](https://oreil.ly/jq8Lb) in sports: each
    round and each matchup eliminates the lower-seed team. In hyperband search, though,
    the losing team is declared the loser *before the game completes*. This process
    continues until the championship matchup, where the number-one seed team is the
    eventual champion. This strategy is a lot less wasteful than the brute force approach,
    where each combination is trained to its full epochs, since that eats up a lot
    of training resources and time.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这有点像体育比赛中的[淘汰赛](https://oreil.ly/jq8Lb)：每一轮和每一场比赛都会淘汰排名较低的球队。然而，在超带搜索中，失败的球队在比赛完成之前就被宣布失败了。这个过程会一直持续到冠军赛，冠军赛中排名第一的球队最终成为冠军。这种策略比蛮力方法要节约得多，因为每种组合都会被训练到完整的epochs，这会消耗大量的训练资源和时间。
- en: Let’s apply what you’ve learned to the CIFAR-10 image classification dataset
    you worked with in the previous chapter.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将您在上一章中使用的CIFAR-10图像分类数据集中学到的知识应用起来。
- en: Import Libraries and Load Data
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导入库和加载数据
- en: 'I recommend using a Google Colab notebook with a GPU to run the code in this
    example. As of TensorFlow 2.4.1, the Keras Tuner is not yet a part of the TensorFlow
    distribution, so in the Google Colab environment, you need to run a `pip install`
    command:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议使用Google Colab笔记本电脑和GPU来运行此示例中的代码。截至TensorFlow 2.4.1，Keras Tuner尚未成为TensorFlow分发的一部分，因此在Google
    Colab环境中，您需要运行`pip install`命令：
- en: '[PRE22]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Once it is installed, import it along with all the other libraries:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完成后，将其与所有其他库一起导入：
- en: '[PRE23]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'It will show the current version of TensorFlow—in this case, 2.4.1\. Then load
    and normalize images in one cell:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 它将显示当前版本的TensorFlow——在本例中为2.4.1。然后在一个单元格中加载和归一化图像：
- en: '[PRE24]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now provide a list of labels:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在提供一个标签列表：
- en: '[PRE25]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Next, convert the images to datasets by merging images and labels into tensors.
    Split the test dataset into two groups—the first 500 images (for validation during
    training), and everything else (for testing):'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，通过将图像和标签合并为张量将图像转换为数据集。将测试数据集分为两组——前500张图像（用于训练期间的验证）和其他所有图像（用于测试）：
- en: '[PRE26]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To ascertain the sample size of each dataset, execute the following commands:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 要确定每个数据集的样本大小，请执行以下命令：
- en: '[PRE27]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You should get something like the following output:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会得到类似以下输出：
- en: '[PRE28]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Next, in order to take advantage of distributed training, define a `MirroredStrategy`
    object to handle distributed training:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了利用分布式训练，定义一个`MirroredStrategy`对象来处理分布式训练：
- en: '[PRE29]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'In your Colab notebook, you should see the following output:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的Colab笔记本中，您应该看到以下输出：
- en: '[PRE30]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now set up sample batch parameters:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在设置样本批处理参数：
- en: '[PRE31]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Shuffle and batch all datasets:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对所有数据集进行洗牌和批处理：
- en: '[PRE32]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Now you can create a function to wrap the model architecture:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以创建一个函数来包装模型架构：
- en: '[PRE33]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: There are some major differences between this function and the one you saw in
    [Chapter 9](ch09.xhtml#serving_tensorflow_models). The function now expects an
    input object, `hp`. This means the function will be invoked by a hyperparameter
    tuning object named `hp`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数与您在[第9章](ch09.xhtml#serving_tensorflow_models)中看到的函数之间有一些主要区别。该函数现在期望一个输入对象`hp`。这意味着该函数将由名为`hp`的超参数调整对象调用。
- en: In the model architecture, node count for the first layer `conv_1` is declared
    for hyperparameter search by using `hp_node_count`. An activation function for
    layer `dense_1` is also declared for hyperparameter search by using `hp_AF`. Finally,
    the learning rate in `optimizer` is declared for hyperparameter search by `hp_LR`.
    This function returns the model with hyperparameters declared.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型架构中，第一层`conv_1`的节点计数通过使用`hp_node_count`进行超参数搜索。层`dense_1`的激活函数也通过使用`hp_AF`进行超参数搜索进行声明。最后，`optimizer`中的学习率通过`hp_LR`进行超参数搜索进行声明。此函数返回具有声明的超参数的模型。
- en: 'Next, define an object (`tuner`) with `kt.Hyperband`, which takes the `build_model`
    function as an input:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`kt.Hyperband`定义一个对象（`tuner`），该对象将`build_model`函数作为输入：
- en: '[PRE34]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You pass the following inputs to define the `tuner` object:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您传递以下输入以定义`tuner`对象：
- en: '`hypermodel`'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '`超模型`'
- en: A function that defines the model architecture and optimizer.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 定义模型架构和优化器的函数。
- en: '`objective`'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`目标`'
- en: A training metric used to evaluate model performance.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 用于评估模型性能的训练指标。
- en: '`max_epochs`'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '`max_epochs`'
- en: The maximum number of epochs for model training.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 模型训练的最大时期数。
- en: '`factor`'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`因子`'
- en: The reduction factor for epochs and the number of models in each bracket. Models
    ranked in the top 1/factor are selected and advanced to the next round of training.
    If the factor is 2, then the top half will advance to the next round. If the factor
    is 4, then the top quarter will advance to the next round.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 每个框架中的时期和模型数量的减少因子。排名在前1/因子的模型被选中并进入下一轮训练。如果因子是2，那么前一半将进入下一轮。如果因子是4，那么前一四分之一将进入下一轮。
- en: '`directory`'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`目录`'
- en: The target directory to write results to, such as checkpoints for each model.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 将结果写入的目标目录，例如每个模型的检查点。
- en: '`project_name`'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`project_name`'
- en: The prefix for all files saved in the target directory.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在目标目录中保存的所有文件的前缀。
- en: 'Here you can define an early stop to stop training if there is no improvement
    in validation accuracy for five epochs:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，您可以定义一个提前停止，如果验证准确性在五个时期内没有改善，则停止训练：
- en: '[PRE35]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Now you are ready to launch the search via the Hyperband algorithm. It will
    print out the best hyperparameters when the search is complete:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已准备好通过Hyperband算法启动搜索。当搜索完成时，它将打印出最佳超参数：
- en: '[PRE36]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: As you can see, after the search, `best_hps` holds all the information about
    the best hyperparameter values.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，搜索后，`best_hps`保存了有关最佳超参数值的所有信息。
- en: 'When you run this example in a Colab notebook with a GPU, it usually takes
    about 10 minutes to complete. Expect to see output that looks something like this:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在带有GPU的Colab笔记本中运行此示例时，通常需要大约10分钟才能完成。期望看到类似以下的输出：
- en: '[PRE37]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'This output tells us that the best hyperparameters are as follows:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 此输出告诉我们最佳超参数如下：
- en: Optimal node count for layer `conv_1` is 24.
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`conv_1`层的最佳节点计数为24。'
- en: Optimal learning rate for `optimizer` is 0.0013005004751682134.
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`optimizer`的最佳学习率为0.0013005004751682134。'
- en: Optimal activation function choice for `dense_1` is “relu.”
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dense_1`的最佳激活函数选择为“relu”。'
- en: 'Now that you have the best hyperparameters, you need to formally train the
    model with these values. The Keras Tuner has a high-level function called `hypermodel.build`
    that makes this a single-command process:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经获得了最佳超参数，需要使用这些值正式训练模型。Keras Tuner具有一个称为`hypermodel.build`的高级函数，使这成为一个单一命令过程：
- en: '[PRE38]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'After that, set up the checkpoint directory as you did in [Chapter 9](ch09.xhtml#serving_tensorflow_models):'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，设置检查点目录，方式与您在[第9章](ch09.xhtml#serving_tensorflow_models)中所做的相同：
- en: '[PRE39]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You’ll also set up the checkpoint the same way you did in [Chapter 9](ch09.xhtml#serving_tensorflow_models):'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将设置检查点，方式与您在[第9章](ch09.xhtml#serving_tensorflow_models)中所做的相同：
- en: '[PRE40]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Now it’s time to launch the model training process with the `best_hp_model`
    object:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候使用`best_hp_model`对象启动模型训练过程：
- en: '[PRE41]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Once the training is complete, load the model that has the highest validation
    accuracy. With `save_best_only` set to True, the best model will be the one in
    the latest checkpoint:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 训练完成后，加载具有最高验证准确性的模型。将`save_best_only`设置为True，最佳模型将是最新检查点中的模型：
- en: '[PRE42]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: Now `best_hp_model` is ready for serving. It is trained with the best hyperparameters
    and the weights and bias are loaded from the best training epoch, which is the
    one that yielded the highest validation accuracy.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在`best_hp_model`已准备好用于服务。它是使用最佳超参数训练的，并且权重和偏差从产生最高验证准确性的最佳训练时期加载。
- en: Wrapping Up
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learned how to improve your model building and quality
    assurance processes.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，您学会了如何改进模型构建和质量保证流程。
- en: One of the most frequent and important quality assurance concerns for ML models
    is fairness. Fairness Indicators is a tool that can help you investigate model
    bias across many different feature interactions and combinations. When evaluating
    model fairness, you have to look for model bias in the training data. You also
    need to rely on subject matter experts for context as you develop your hypothesis
    to investigate any model bias. In the *Titanic* example this process is pretty
    straightforward, because it is obvious that gender and class played important
    roles in determining each individual’s chance for survival. However, in practice,
    there are many other factors that complicate matters, including how the data was
    collected and whether or not the context or conditions for data collection favored
    one group within the sample source over others.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 机器学习模型中最常见和重要的质量保证问题之一是公平性。公平性指标是一个工具，可以帮助你调查模型在许多不同特征交互和组合中的偏见。在评估模型公平性时，你必须查找训练数据中的模型偏见。你还需要依赖主题专家的背景知识，以便在调查任何模型偏见时制定假设。在《泰坦尼克号》的例子中，这个过程相当直接，因为很明显性别和阶级在决定每个人生存机会中起着重要作用。然而，在实践中，还有许多其他因素使事情复杂化，包括数据是如何收集的，以及数据收集的背景或条件是否偏向于样本来源中的某一组。
- en: In the model building process, hyperparameter tuning is time consuming. In the
    past, you had to iterate over each combination of potential hyperparameter values
    to search for the best combination. With the Keras Tuner library, however, a relatively
    advanced search algorithm known as Hyperband conducts searches efficiently using
    a tournament-bracket style framework. In this framework, models trained on weak
    hyperparameters are terminated and removed before the training epochs complete.
    This reduces total search time and the best hyperparameters emerge as the winner.
    All you need to do is formally train the same model with the winning combination.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型构建过程中，超参数调整是耗时的。过去，你必须迭代每个潜在超参数值的组合，以搜索最佳组合。然而，使用 Keras Tuner 库，一个相对先进的搜索算法称为
    Hyperband 可以高效地进行搜索，使用一种类似锦标赛的框架。在这个框架中，基于弱超参数训练的模型会在训练周期完成之前被终止和移除。这减少了总体搜索时间，最佳超参数会脱颖而出。你只需要用获胜组合正式训练相同的模型。
- en: With this knowledge, you are now ready to elevate your TensorFlow model development
    and testing skills to the next level.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些知识，你现在可以将你的 TensorFlow 模型开发和测试技能提升到下一个水平。
- en: ^([1](ch10.xhtml#ch10fn05-marker)) If you need a refresher on classification
    metrics, I suggest the succinct and useful review included in Google’s [*Machine
    Learning Crash Course*](https://oreil.ly/yEEdm).
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要对分类指标进行复习，我建议你查看谷歌的《机器学习速成课程》中包含的简洁而有用的复习部分。
