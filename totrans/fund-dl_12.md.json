["```py\nMary travelled to the hallway. She grabbed the milk glass there.\nThen she travelled to the office, where she found an apple\nand grabbed it.\n\n*How many objects is Mary carrying?*\n\n```", "```py\n1\\. allocate a memory location for a *counter* 2\\. initialize *counter* to 0\n3\\. for each *word* in *passage*\n\u00a0   3.1\\. if *word* is 'grabbed'\n\u00a0       3.1.1\\. increment *counter*\n4\\. return *counter* value\n\n```", "```py\ndef Lt(L, wwt, p, N):\n\n\u00a0\u00a0\u00a0\u00a0L_t = torch.zeros((N,N), dtype=torch.float32)\n\u00a0\u00a0\u00a0\u00a0for i in range(N):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for j in range(N):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if i == j:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0continue\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mask = torch.zeros((N,N), dtype=torch.float32)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0mask[i,j] = 1.0\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0link_t = (1 - wwt[i] - wwt[j]) * L[i,j] + \\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0wwt[i] * p[j]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0L_t += mask * link_t\n\u00a0\u00a0\u00a0\u00a0return L_t\n\n```", "```py\ndef Lt(L, wwt, p, N):\n\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0returns the updated link matrix given the previous one along\n\u00a0\u00a0\u00a0\u00a0with the updated write weightings and the previous precedence\n\u00a0\u00a0\u00a0\u00a0vector\n\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0def pairwise_add(v):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0returns the matrix of pairs - adding the elements of v to\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0themselves\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0n = v.shape[0]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0# a NxN matrix of duplicates of u along the columns\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0V = v.repeat(1,n)\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return V + V\n\n\u00a0\u00a0\u00a0\u00a0# expand dimensions of wwt and p to make matmul behave as outer\n\u00a0\u00a0\u00a0\u00a0# product\n\u00a0\u00a0\u00a0\u00a0wwt = torch.unsqueeze(wwt, 1)\n\u00a0\u00a0\u00a0\u00a0p = torch.unsqueeze(p, 0)\n\n\u00a0\u00a0\u00a0\u00a0I = torch.eye(N, dtype=torch.float32)\n\u00a0\u00a0\u00a0\u00a0return (((1 - pairwise_add(wwt)) * L +\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0torch.matmul(wwt, p)) * (1 - I))\n\n```", "```py\nsorted_ut, free_list = torch.topk(-1*ut, N)\nsorted_ut *= -1\n\n```", "```py\nempty_at = torch.empty(N)\na_t = empty_at.scatter(0, free_list, out_of_location_at)\n\n```", "```py\n1 Mary took the milk there.\n2 Mary went to the office.\n3 What is Mary carrying?\u00a0\u00a0\u00a0milk 1\n4 Mary took the apple there.\n5 Sandra journeyed to the bedroom.\n6 What is Mary carrying?\u00a0\u00a0\u00a0milk,apple 1 4\n\n```", "```py\nTask \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 Result \u00a0 \u00a0 \u00a0 \u00a0 \u00a0  Paper's Mean\n---------------------------------------------------------\nsingle supporting fact \u00a0 \u00a0 0.00% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 9.0\u00b112.6%\ntwo supporting facts \u00a0 \u00a0 \u00a0 11.88% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a039.2\u00b120.5%\nthree supporting facts \u00a0 \u00a0 27.80% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a039.6\u00b116.4%\ntwo arg relations \u00a0 \u00a0 \u00a0 \u00a0 \u00a01.40% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.4\u00b10.7%\nthree arg relations \u00a0 \u00a0 \u00a0 \u00a01.70% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1.5\u00b11.0%\nyes no questions \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.50% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 6.9\u00b17.5%\ncounting \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.90% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 9.8\u00b17.0%\nlists sets \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2.10% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 5.5\u00b15.9%\nsimple negation \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.80% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 7.7\u00b18.3%\nindefinite knowledge \u00a0 \u00a0 \u00a0 1.70% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 9.6\u00b111.4%\nbasic coreference \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.10% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 3.3\u00b15.7%\nconjunction \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a00.00% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 5.0\u00b16.3%\ncompound coreference \u00a0 \u00a0 \u00a0 0.40% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 3.1\u00b13.6%\ntime reasoning \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 11.80% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a011.0\u00b17.5%\nbasic deduction \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a045.44% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a027.2\u00b120.1%\nbasic induction \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a056.43% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a053.6\u00b11.9%\npositional reasoning \u00a0 \u00a0 \u00a0 39.02% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a032.4\u00b18.0%\nsize reasoning \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 8.68% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 4.2\u00b11.8%\npath finding \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 98.21% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a064.6\u00b137.4%\nagents motivations \u00a0 \u00a0 \u00a0 \u00a0 2.71% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 0.0\u00b10.1%\n---------------------------------------------------------\nMean Err. \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a015.78% \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a016.7\u00b17.6%\nFailed (err. > 5%) \u00a0 \u00a0 \u00a0 \u00a0 8 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a011.2\u00b15.4\n\n```"]