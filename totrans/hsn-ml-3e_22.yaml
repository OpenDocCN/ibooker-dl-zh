- en: Appendix A. Machine Learning Project Checklist
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This checklist can guide you through your machine learning projects. There
    are eight main steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Frame the problem and look at the big picture.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Get the data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explore the data to gain insights.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Prepare the data to better expose the underlying data patterns to machine learning
    algorithms.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explore many different models and shortlist the best ones.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fine-tune your models and combine them into a great solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Present your solution.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch, monitor, and maintain your system.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Obviously, you should feel free to adapt this checklist to your needs.
  prefs: []
  type: TYPE_NORMAL
- en: Frame the Problem and Look at the Big Picture
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Define the objective in business terms.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How will your solution be used?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the current solutions/workarounds (if any)?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How should you frame this problem (supervised/unsupervised, online/offline,
    etc.)?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How should performance be measured?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is the performance measure aligned with the business objective?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What would be the minimum performance needed to reach the business objective?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are comparable problems? Can you reuse experience or tools?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is human expertise available?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How would you solve the problem manually?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: List the assumptions you (or others) have made so far.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Verify assumptions if possible.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Get the Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Note: automate as much as possible so you can easily get fresh data.'
  prefs: []
  type: TYPE_NORMAL
- en: List the data you need and how much you need.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Find and document where you can get that data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check how much space it will take.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check legal obligations, and get authorization if necessary.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Get access authorizations.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a workspace (with enough storage space).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Get the data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Convert the data to a format you can easily manipulate (without changing the
    data itself).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Ensure sensitive information is deleted or protected (e.g., anonymized).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Check the size and type of data (time series, sample, geographical, etc.).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Sample a test set, put it aside, and never look at it (no data snooping!).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Explore the Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Note: try to get insights from a field expert for these steps.'
  prefs: []
  type: TYPE_NORMAL
- en: Create a copy of the data for exploration (sampling it down to a manageable
    size if necessary).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a Jupyter notebook to keep a record of your data exploration.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Study each attribute and its characteristics:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Name
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Type (categorical, int/float, bounded/unbounded, text, structured, etc.)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '% of missing values'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Noisiness and type of noise (stochastic, outliers, rounding errors, etc.)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Usefulness for the task
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Type of distribution (Gaussian, uniform, logarithmic, etc.)
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: For supervised learning tasks, identify the target attribute(s).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Visualize the data.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Study the correlations between attributes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Study how you would solve the problem manually.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify the promising transformations you may want to apply.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Identify extra data that would be useful (go back to [“Get the Data”](#get_the_data_step)).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Document what you have learned.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Prepare the Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Notes:'
  prefs: []
  type: TYPE_NORMAL
- en: Work on copies of the data (keep the original dataset intact).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Write functions for all data transformations you apply, for five reasons:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So you can easily prepare the data the next time you get a fresh dataset
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: So you can apply these transformations in future projects
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: To clean and prepare the test set
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: To clean and prepare new data instances once your solution is live
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: To make it easy to treat your preparation choices as hyperparameters
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Clean the data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fix or remove outliers (optional).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Fill in missing values (e.g., with zero, mean, median…​) or drop their rows
    (or columns).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Perform feature selection (optional):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Drop the attributes that provide no useful information for the task.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Perform feature engineering, where appropriate:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Discretize continuous features.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Decompose features (e.g., categorical, date/time, etc.).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Add promising transformations of features (e.g., log(*x*), sqrt(*x*), *x*²,
    etc.).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Aggregate features into promising new features.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Perform feature scaling:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Standardize or normalize features.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Shortlist Promising Models
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Notes:'
  prefs: []
  type: TYPE_NORMAL
- en: If the data is huge, you may want to sample smaller training sets so you can
    train many different models in a reasonable time (be aware that this penalizes
    complex models such as large neural nets or random forests).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once again, try to automate these steps as much as possible.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Train many quick-and-dirty models from different categories (e.g., linear, naive
    Bayes, SVM, random forest, neural net, etc.) using standard parameters.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Measure and compare their performance:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: For each model, use *N*-fold cross-validation and compute the mean and standard
    deviation of the performance measure on the *N* folds.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyze the most significant variables for each algorithm.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Analyze the types of errors the models make:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What data would a human have used to avoid these errors?
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Perform a quick round of feature selection and engineering.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Perform one or two more quick iterations of the five previous steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Shortlist the top three to five most promising models, preferring models that
    make different types of errors.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Fine-Tune the System
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Notes:'
  prefs: []
  type: TYPE_NORMAL
- en: You will want to use as much data as possible for this step, especially as you
    move toward the end of fine-tuning.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As always, automate what you can.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fine-tune the hyperparameters using cross-validation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Treat your data transformation choices as hyperparameters, especially when you
    are not sure about them (e.g., if you’re not sure whether to replace missing values
    with zeros or with the median value, or to just drop the rows).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Unless there are very few hyperparameter values to explore, prefer random search
    over grid search. If training is very long, you may prefer a Bayesian optimization
    approach (e.g., using Gaussian process priors, as described by [Jasper Snoek et
    al.](https://homl.info/134)^([1](app01.html#idm45720157724336))).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Try ensemble methods. Combining your best models will often produce better performance
    than running them individually.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you are confident about your final model, measure its performance on the
    test set to estimate the generalization error.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Warning
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: 'Don’t tweak your model after measuring the generalization error: you would
    just start overfitting the test set.'
  prefs: []
  type: TYPE_NORMAL
- en: Present Your Solution
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Document what you have done.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Create a nice presentation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Make sure you highlight the big picture first.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Explain why your solution achieves the business objective.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Don’t forget to present interesting points you noticed along the way:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Describe what worked and what did not.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: List your assumptions and your system’s limitations.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Ensure your key findings are communicated through beautiful visualizations or
    easy-to-remember statements (e.g., “the median income is the number-one predictor
    of housing prices”).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Launch!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Get your solution ready for production (plug into production data inputs, write
    unit tests, etc.).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Write monitoring code to check your system’s live performance at regular intervals
    and trigger alerts when it drops:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Beware of slow degradation: models tend to “rot” as data evolves.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Measuring performance may require a human pipeline (e.g., via a crowdsourcing
    service).
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Also monitor your inputs’ quality (e.g., a malfunctioning sensor sending random
    values, or another team’s output becoming stale). This is particularly important
    for online learning systems.
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Retrain your models on a regular basis on fresh data (automate as much as possible).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '^([1](app01.html#idm45720157724336-marker)) Jasper Snoek et al., “Practical
    Bayesian Optimization of Machine Learning Algorithms”, *Proceedings of the 25th
    International Conference on Neural Information Processing Systems* 2 (2012): 2951–2959.'
  prefs: []
  type: TYPE_NORMAL
