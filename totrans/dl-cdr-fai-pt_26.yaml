- en: Appendix A. Creating a Blog
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A. 创建博客
- en: In [Chapter 2](ch02.xhtml#chapter_production), we suggested that you might want
    to try blogging as a way to help digest the information you’re reading and practicing.
    But what if you don’t have a blog already? Which platform should you use?
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.xhtml#chapter_production)中，我们建议您可能希望尝试博客作为帮助消化您正在阅读和练习的信息的一种方式。但是如果您还没有博客呢？应该使用哪个平台呢？
- en: 'Unfortunately, when it comes to blogging, it seems like you have to make a
    difficult decision: either use a platform that makes it easy but subjects you
    and your readers to advertisements, paywalls, and fees, or spend hours setting
    up your own hosting service and weeks learning about all kinds of intricate details.
    Perhaps the biggest benefit to the “do-it-yourself” approach is that you really
    own your own posts, rather than being at the whim of a service provider and their
    decisions about how to monetize your content in the future.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，当涉及博客时，似乎您必须做出一个困难的决定：要么使用一个使事情变得容易但会让您和读者受到广告、付费墙和费用的平台，要么花费数小时设置自己的托管服务并花费数周学习各种复杂的细节。也许“自己动手”方法最大的好处是，您真正拥有自己的帖子，而不是受制于服务提供商及其关于如何在未来变现您的内容的决定。
- en: It turns out, however, that you can have the best of both worlds!
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，事实证明，您可以兼得两全！
- en: Blogging with GitHub Pages
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用GitHub Pages进行博客
- en: A great solution is to host your blog on a platform called [GitHub Pages](https://pages.github.com),
    which is free, has no ads or paywall, and makes your data available in a standard
    way such that you can at any time move your blog to another host. But all the
    approaches we’ve seen to using GitHub Pages have required knowledge of the command
    line and arcane tools that only software developers are likely to be familiar
    with. For instance, GitHub’s [own documentation](https://oreil.ly/xemwJ) on setting
    up a blog includes a long list of instructions that involve installing the Ruby
    programming language, using the `git` command-line tool, copying over version
    numbers, and more—17 steps in total!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一个很好的解决方案是在一个名为[GitHub Pages](https://pages.github.com)的平台上托管您的博客，这是免费的，没有广告或付费墙，并以标准方式使您的数据可用，以便您随时将您的博客迁移到另一个主机。但是，我们看到的所有使用GitHub
    Pages的方法都需要了解命令行和只有软件开发人员可能熟悉的神秘工具。例如，GitHub的[官方文档](https://oreil.ly/xemwJ)中关于设置博客的说明包括安装Ruby编程语言，使用`git`命令行工具，复制版本号等一长串指令，总共有17个步骤！
- en: 'To cut down on the hassle, we’ve created an easy approach that allows you to
    use an *entirely browser-based interface* for all your blogging needs. You will
    be up and running with your new blog within about five minutes. It doesn’t cost
    anything, and you can easily add your own custom domain to it if you wish to.
    In this section, we’ll explain how to do it, using a template we’ve created called
    `fast_template`. (NB: be sure to check the [book’s website](https://book.fast.ai)
    for the latest blog recommendations, since new tools are always coming out.)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少麻烦，我们创建了一种简单的方法，允许您使用*完全基于浏览器的界面*来满足您所有的博客需求。您将在大约五分钟内启动并运行您的新博客。这不需要任何费用，如果您愿意，您可以轻松添加自己的自定义域名。在本节中，我们将解释如何做到这一点，使用我们创建的名为`fast_template`的模板。（注：请务必查看[书籍网站](https://book.fast.ai)以获取最新的博客推荐，因为新工具总是不断涌现。）
- en: Creating the Repository
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建存储库
- en: You’ll need an account on GitHub, so head over there now and create an account
    if you don’t have one already. Normally, GitHub is used by software developers
    for writing code, and they use a sophisticated command-line tool to work with
    it—but we’re going to show you an approach that doesn’t use the command line at
    all!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个GitHub账户，所以现在前往那里并创建一个账户（如果您还没有）。通常，GitHub是由软件开发人员用于编写代码的，他们使用一个复杂的命令行工具来处理它，但我们将向您展示一种根本不使用命令行的方法！
- en: To get started, point your browser to [*https://github.com/fastai/fast_template/generate*](https://github.com/fastai/fast_template/generate)
    (make sure you’re logged in). This will allow you to create a place to store your
    blog, called a *repository*. You will see a screen like the one in [Figure A-1](#githup_repo).
    Note that you have to enter your repository name using the *exact* format shown
    here—that is, your GitHub username followed by `.github.io`.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，请将浏览器指向[*https://github.com/fastai/fast_template/generate*](https://github.com/fastai/fast_template/generate)（确保您已登录）。这将允许您创建一个存储博客的地方，称为*存储库*。您将看到一个类似于[图A-1](#githup_repo)的屏幕。请注意，您必须使用此处显示的*确切*格式输入您的存储库名称，即您的GitHub用户名后跟`.github.io`。
- en: '![Screebshot of the GitHub page for creating a new repository](Images/dlcf_aa01.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![创建新存储库的GitHub页面的屏幕截图](Images/dlcf_aa01.png)'
- en: Figure A-1\. Creating your repository
  id: totrans-11
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图A-1. 创建您的存储库
- en: Once you’ve entered that, and any description you like, click “Create repository
    from template.” You have the choice to make the repository “private,” but since
    you are creating a blog that you want other people to read, having the underlying
    files publicly available hopefully won’t be a problem for you.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您输入了这些内容，以及您喜欢的任何描述，点击“从模板创建存储库”。您可以选择将存储库设为“私有”，但由于您正在创建一个希望其他人阅读的博客，希望公开可用的基础文件对您来说不会成为问题。
- en: Now, let’s set up your home page!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们设置您的主页！
- en: Setting Up Your Home Page
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置您的主页
- en: When readers arrive at your blog, the first thing that they will see is the
    content of a file called *index.md*. This is a [Markdown](https://oreil.ly/aVOhs)
    file. Markdown is a powerful yet simple way of creating formatted text, such as
    bullet points, italics, hyperlinks, and so forth. It is very widely used, including
    for all the formatting in Jupyter notebooks, nearly every part of the GitHub site,
    and many other places all over the internet. To create Markdown text, you can
    just type in plain English and then add some special characters to add special
    behavior. For instance, if you type a `*` character before and after a word or
    phrase, that will put it in *italics*. Let’s try it now.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当读者访问您的博客时，他们将首先看到一个名为 *index.md* 的文件的内容。这是一个 [Markdown](https://oreil.ly/aVOhs)
    文件。Markdown 是一种强大而简单的创建格式化文本的方式，比如项目符号、斜体、超链接等等。它被广泛使用，包括 Jupyter 笔记本中的所有格式，几乎
    GitHub 网站的每个部分，以及互联网上的许多其他地方。要创建 Markdown 文本，您只需输入普通英语，然后添加一些特殊字符以添加特殊行为。例如，如果您在单词或短语前后输入
    `*` 字符，那将使其变为 *斜体*。现在让我们试一试。
- en: To open the file, click its filename in GitHub. To edit it, click the pencil
    icon at the far righthand side of the screen, as shown in [Figure A-2](#app_a_01).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要打开文件，请在 GitHub 中点击其文件名。要编辑它，请点击屏幕最右侧的铅笔图标，如 [图 A-2](#app_a_01) 所示。
- en: '![Screenshot showing where to click to edit the file](Images/dlcf_aa02.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![显示点击编辑文件的位置的截图](Images/dlcf_aa02.png)'
- en: Figure A-2\. Edit this file
  id: totrans-18
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-2. 编辑此文件
- en: You can add to, edit, or replace the text that you see. Click the “Preview changes”
    button ([Figure A-3](#app_a_02)) to see what your Markdown text will look like
    in your blog. Lines that you have added or changed will appear with a green bar
    on the lefthand side.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加、编辑或替换您看到的文本。点击“预览更改”按钮（[图 A-3](#app_a_02)）查看您的 Markdown 文本在博客中的样子。您添加或更改的行将在左侧显示为绿色条。
- en: '![Screenshot showing where to click to preview changes](Images/dlcf_aa03.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![显示点击预览更改的位置的截图](Images/dlcf_aa03.png)'
- en: Figure A-3\. Preview changes to catch any mistakes
  id: totrans-21
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-3. 预览更改以捕捉任何错误
- en: To save your changes, scroll to the bottom of the page and click “Commit changes,”
    as shown in [Figure A-4](#app_a_03). On GitHub, to *commit* something means to
    save it to the GitHub server.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要保存更改，请滚动到页面底部，然后点击“提交更改”，如 [图 A-4](#app_a_03) 所示。在 GitHub 上，*提交* 意味着将其保存到 GitHub
    服务器。
- en: '![Screenshot showing where to click to commit the changes](Images/dlcf_aa04.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![显示点击提交更改的位置的截图](Images/dlcf_aa04.png)'
- en: Figure A-4\. Commit your changes to save them
  id: totrans-24
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-4. 提交更改以保存它们
- en: Next, you should configure your blog’s settings. To do so, click the file called
    *_config.yml* and then click the edit button as you did for the index file. Change
    the title, description, and GitHub username values (see [Figure A-5](#github_config)).
    You need to leave the names before the colons in place, and type your new values
    in after the colon (and a space) on each line. You can also add to your email
    address and Twitter username if you wish, but note that these will appear on your
    public blog if you fill them in here.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您应该配置您的博客设置。要这样做，请点击名为 *_config.yml* 的文件，然后点击编辑按钮，就像您为 index 文件所做的那样。更改标题、描述和
    GitHub 用户名值（参见 [图 A-5](#github_config)）。您需要保留冒号前的名称不变，并在冒号后（和每行的空格后）输入您的新值。如果愿意，您还可以添加您的电子邮件地址和
    Twitter 用户名，但请注意，如果在此处填写它们，它们将出现在您的公共博客上。
- en: '![Screenshot showing the config file and how to fill it](Images/dlcf_aa05.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![显示配置文件和如何填写的截图](Images/dlcf_aa05.png)'
- en: Figure A-5\. Fill in the config file
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-5. 填写配置文件
- en: After you’re done, commit your changes just as you did with the index file;
    then wait a minute or so while GitHub processes your new blog. Point your web
    browser to *<username>.github.io* (replacing *<username>* with your GitHub username).
    You should see your blog, which will look something like [Figure A-6](#github_blog).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，像处理 index 文件一样提交您的更改；然后等待一两分钟，让 GitHub 处理您的新博客。将您的网络浏览器指向 *<username>.github.io*（将
    *<username>* 替换为您的 GitHub 用户名）。您应该看到您的博客，它看起来类似于 [图 A-6](#github_blog)。
- en: '![Screenshot showing the website username.github.io](Images/dlcf_aa06.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![显示网站用户名.github.io 的截图](Images/dlcf_aa06.png)'
- en: Figure A-6\. Your blog is online!
  id: totrans-30
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-6. 您的博客已上线！
- en: Creating Posts
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建文章
- en: Now you’re ready to create your first post. All your posts will go in the *_posts*
    folder. Click that now, and then click the “Create file” button. You need to be
    careful to name your file using the format *<year>-<month>-<day>-<name>.md*, as
    shown in [Figure A-7](#app_a_06), where *<year>* is a four-digit number, and *<month>*
    and *<day>* are two-digit numbers. *<name>* can be anything you want that will
    help you remember what this post was about. The *.md* extension is for Markdown
    documents.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好创建您的第一篇文章了。您所有的文章都将放在 *_posts* 文件夹中。现在点击它，然后点击“创建文件”按钮。您需要小心使用格式 *<year>-<month>-<day>-<name>.md*
    命名您的文件，就像 [图 A-7](#app_a_06) 中所示，其中 *<year>* 是一个四位数，*<month>* 和 *<day>* 是两位数。*<name>*
    可以是任何您想要的，可以帮助您记住这篇文章是关于什么的。*.md* 扩展名是用于 Markdown 文档的。
- en: '![Screenshot showing the right syntax to create a new blog post](Images/dlcf_aa07.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![显示创建新博客文章的正确语法的截图](Images/dlcf_aa07.png)'
- en: Figure A-7\. Naming your posts
  id: totrans-34
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-7. 命名您的文章
- en: You can then type the contents of your first post. The only rule is that the
    first line of your post must be a Markdown heading. This is created by putting
    `#` at the start of a line, as seen in [Figure A-8](#app_a_07) (that creates a
    level-1 heading, which you should just use once at the start of your document;
    you can create level-2 headings using `##`, level 3 with `###`, and so forth).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，您可以输入第一篇文章的内容。唯一的规则是您的文章的第一行必须是一个 Markdown 标题。这是通过在行的开头放置 `#` 创建的，如 [图 A-8](#app_a_07)
    中所示（这将创建一个一级标题，在文档开头只需使用一次；您可以使用 `##` 创建二级标题，使用 `###` 创建三级标题，依此类推）。
- en: '![Screenshot showing the start of a blog post](Images/dlcf_aa08.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![显示博客文章开头的截图](Images/dlcf_aa08.png)'
- en: Figure A-8\. Markdown syntax for a title
  id: totrans-37
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-8. 标题的 Markdown 语法
- en: As before, you can click the Preview button to see how your Markdown formatting
    will look ([Figure A-9](#app_a_08)).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 和之前一样，你可以点击预览按钮查看你的Markdown格式会是什么样子（[图 A-9](#app_a_08)）。
- en: '![Screenshot showing the same blog post interpreted in HTML](Images/dlcf_aa09.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![显示用HTML解释的相同博客文章的截图](Images/dlcf_aa09.png)'
- en: Figure A-9\. What the previous Markdown syntax will look like on your blog
  id: totrans-40
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-9\. 之前的Markdown语法在你的博客上会是什么样子
- en: And you will need to click the “Commit new file” button to save it to GitHub,
    as shown in [Figure A-10](#app_a_09).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要点击“提交新文件”按钮将其保存到GitHub，如[图 A-10](#app_a_09)所示。
- en: '![Screenshot showing where to click to commit the new file](Images/dlcf_aa10.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![显示点击提交新文件的位置的截图](Images/dlcf_aa10.png)'
- en: Figure A-10\. Commit your changes to save them
  id: totrans-43
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-10\. 提交更改以保存它们
- en: Have a look at your blog home page again, and you will see that this post has
    now appeared—[Figure A-11](#app_a_10) shows the result with the sample post we
    just added. Remember that you will need to wait a minute or so for GitHub to process
    the request before the file shows up.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 再次查看你的博客首页，你会看到这篇文章现在已经出现了——[图 A-11](#app_a_10)展示了我们刚刚添加的示例文章的结果。请记住，你需要等待一分钟左右让GitHub处理请求，然后文件才会显示出来。
- en: '![Screenshot showing the first post on the blog website](Images/dlcf_aa11.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![显示博客网站上第一篇文章的截图](Images/dlcf_aa11.png)'
- en: Figure A-11\. Your first post is live!
  id: totrans-46
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-11\. 你的第一篇文章已发布！
- en: You may have noticed that we provided a sample blog post, which you can go ahead
    and delete now. Go to your *_posts* folder, as before, and click *2020-01-14-welcome.md*.
    Then click the trash icon on the far right, as shown in [Figure A-12](#app_a_11).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到我们提供了一个示例博客文章，你现在可以继续删除。像之前一样，转到你的*_posts*文件夹，点击*2020-01-14-welcome.md*。然后点击最右边的垃圾桶图标，如[图
    A-12](#app_a_11)所示。
- en: '![Screenshot showing how to delete the mock post](Images/dlcf_aa12.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![显示如何删除模拟文章的截图](Images/dlcf_aa12.png)'
- en: Figure A-12\. Delete the sample blog post
  id: totrans-49
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-12\. 删除示例博客文章
- en: In GitHub, nothing actually changes until you commit—including when you delete
    a file! So, after you click the trash icon, scroll down to the bottom of the page
    and commit your changes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在GitHub中，直到你提交，什么都不会真正改变——包括删除文件！所以，在你点击垃圾桶图标后，滚动到页面底部并提交你的更改。
- en: 'You can include images in your posts by adding a line of Markdown like the
    following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过添加一行Markdown来在你的帖子中包含图片，就像下面这样：
- en: '[PRE0]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For this to work, you will need to put the image inside your *images* folder.
    To do this, click the *images* folder, and then click the “Upload files” button
    ([Figure A-13](#app_a_12)).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个工作起效，你需要将图片放在你的*images*文件夹中。要做到这一点，点击*images*文件夹，然后点击“上传文件”按钮（[图 A-13](#app_a_12)）。
- en: '![Screenshot showing how to upload new files](Images/dlcf_aa13.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![显示如何上传新文件的截图](Images/dlcf_aa13.png)'
- en: Figure A-13\. Upload a file from your computer
  id: totrans-55
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-13\. 从你的计算机上传文件
- en: Now let’s see how to do all of this directly from your computer.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看如何直接从你的计算机上完成所有这些操作。
- en: Synchronizing GitHub and Your Computer
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 同步GitHub和你的计算机
- en: There are lots of reasons you might want to copy your blog content from GitHub
    to your computer—you might want to be able to read or edit your posts offline,
    or maybe you’d like a backup in case something happens to your GitHub repository.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多原因你可能想要将你的博客内容从GitHub复制到你的计算机上——你可能想要能够离线阅读或编辑你的帖子，或者也许你想要备份以防发生什么事情影响了你的GitHub存储库。
- en: GitHub does more than just let you copy your repository to your computer; it
    lets you *synchronize* it with your computer. That means you can make changes
    on GitHub, and they’ll copy over to your computer; and you can make changes on
    your computer, and they’ll copy over to GitHub. You can even let other people
    access and modify your blog, and their changes and your changes will be automatically
    combined the next time you sync.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: GitHub不仅让你将存储库复制到你的计算机上；它还让你*同步*它与你的计算机。这意味着你可以在GitHub上进行更改，它们会复制到你的计算机上；你也可以在你的计算机上进行更改，它们会复制到GitHub上。你甚至可以让其他人访问和修改你的博客，他们的更改和你的更改将在下次同步时自动合并。
- en: To make this work, you have to install an application called [GitHub Desktop](https://desktop.github.com)
    on your computer. It runs on Mac, Windows, and Linux. Follow the directions to
    install it, and when you run, it it’ll ask you to log in to GitHub and select
    the repository to sync. Click “Clone a repository from the Internet,” as shown
    in [Figure A-14](#app_a_13).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个工作起效，你需要在你的计算机上安装一个叫做[GitHub桌面](https://desktop.github.com)的应用程序。它可以在Mac、Windows和Linux上运行。按照安装说明进行安装，当你运行它时，它会要求你登录GitHub并选择要同步的存储库。点击“从互联网克隆存储库”，如[图
    A-14](#app_a_13)所示。
- en: '![A screenshot showing how to clone your repository](Images/dlcf_aa14.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![显示如何克隆你的存储库的截图](Images/dlcf_aa14.png)'
- en: Figure A-14\. Clone your repository on GitHub Desktop
  id: totrans-62
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-14\. 在GitHub桌面上克隆你的存储库
- en: Once GitHub has finished syncing your repo, you’ll be able to click “View the
    files of your repository in Explorer” (or Finder), as shown in [Figure A-15](#app_a_14),
    and you’ll see the local copy of your blog! Try editing one of the files on your
    computer. Then return to GitHub Desktop, and you’ll see the Sync button is waiting
    for you to press it. When you click it, your changes will be copied over to GitHub,
    where you’ll see them reflected on the website.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦GitHub完成同步你的存储库，你就可以点击“在资源管理器中查看存储库文件”（或Finder），如[图 A-15](#app_a_14)所示，你将看到你博客的本地副本！尝试在你的计算机上编辑其中一个文件。然后返回到GitHub桌面，你会看到同步按钮等待你按下。当你点击它时，你的更改将被复制到GitHub，你将在网站上看到它们的反映。
- en: '![A screenshot showing the cloned repository](Images/dlcf_aa15.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![显示克隆存储库的截图](Images/dlcf_aa15.png)'
- en: Figure A-15\. Viewing your files locally
  id: totrans-65
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图 A-15\. 本地查看你的文件
- en: If you haven’t used `git` before, GitHub Desktop is a great way to get started.
    As you’ll discover, it’s a fundamental tool used by most data scientists. Another
    tool that we hope you now love is Jupyter Notebook—and there’s a way to write
    your blog directly with that too!
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你以前没有使用过`git`，GitHub桌面是一个很好的开始方式。正如你将会发现的，它是大多数数据科学家使用的基本工具。我们希望你现在也喜欢的另一个工具是Jupyter
    Notebook——你也可以直接用它来写博客！
- en: Jupyter for Blogging
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 博客的Jupyter
- en: You can also write blog posts using Jupyter notebooks. Your Markdown cells,
    code cells, and all the outputs will appear in your exported blog post. The best
    way to do this may have changed by the time you are reading this book, so check
    out the [book’s website](https://book.fast.ai) for the latest information. As
    we write this, the easiest way to create a blog from notebooks is to use [`fastpages`](http://fastpages.fast.ai),
    a more advanced version of `fast_template`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用Jupyter笔记本撰写博客文章。您的Markdown单元格、代码单元格和所有输出都将出现在您导出的博客文章中。在您阅读本书时，最佳方法可能已经发生了变化，因此请查看[书籍网站](https://book.fast.ai)获取最新信息。截至目前，从笔记本创建博客的最简单方法是使用[`fastpages`](http://fastpages.fast.ai)，这是`fast_template`的更高级版本。
- en: To blog with a notebook, just pop it in the *_notebooks* folder in your blog
    repo, and it will appear in your list of blog posts. When you write your notebook,
    write whatever you want your audience to see. Since most writing platforms make
    it hard to include code and outputs, many of us are in the habit of including
    fewer real examples than we should. This is a great way to instead get into the
    habit of including lots of examples as you write.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用笔记本撰写博客，只需将其放入您的博客存储库中的*_notebooks*文件夹中，它将出现在您的博客文章列表中。在撰写笔记本时，写下您希望观众看到的内容。由于大多数写作平台很难包含代码和输出，因此我们许多人习惯于包含比应该更少的真实示例。这是一个很好的方法，可以养成在写作时包含大量示例的习惯。
- en: Often, you’ll want to hide boilerplate such as import statements. You can add
    `#hide` to the top of any cell to make it not show up in output. Jupyter displays
    the result of the last line of a cell, so there’s no need to include `print`.
    (Including extra code that isn’t needed means there’s more cognitive overhead
    for the reader; so don’t include code that you don’t really need!)
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，您会希望隐藏导入语句等样板代码。您可以在任何单元格顶部添加`#hide`，使其不显示在输出中。Jupyter显示单元格的最后一行的结果，因此不需要包含`print`。（包含不需要的额外代码会增加读者的认知负担；因此不要包含您实际不需要的代码！）
