- en: Chapter 5\. Biophysical Machine Learning
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章 生物物理机器学习
- en: In this chapter, we will explore how to use deep learning for understanding
    biophysical systems. In particular, we will explore in depth the problem of predicting
    how small drug-like molecules bind to a protein of interest in the human body.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何使用深度学习来理解生物物理系统。特别是，我们将深入探讨如何预测类似药物的小分子如何与人体中感兴趣的蛋白质结合。
- en: This problem is of fundamental interest in drug discovery. Modulating a single
    protein in a targeted fashion can often have a significant therapeutic impact.
    The breakthrough cancer drug Imatinib tightly binds with BCR-ABL, for example,
    which is part of the reason for its efficacy. For other diseases, it can be challenging
    to find a single protein target with the same efficacy, but the abstraction remains
    useful nevertheless. There are so many mechanisms at play in the human body that
    finding an effective mental model can be crucial.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这个问题在药物发现中具有基本的兴趣。以有针对性的方式调节单个蛋白质往往可以产生显著的治疗效果。例如，突破性的癌症药物伊马替尼紧密结合BCR-ABL，这也是其有效性的原因之一。对于其他疾病，要找到具有相同疗效的单个蛋白质靶标可能是具有挑战性的，但抽象概念仍然是有用的。在人体中有很多机制在起作用，找到一个有效的心理模型可能是至关重要的。
- en: Drugs Don’t Just Target a Single Protein
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 药物不仅仅靶向单个蛋白质
- en: As we’ve discussed, it can be extraordinarily useful to reduce the problem of
    designing a drug for a disease to the problem of designing a drug that interacts
    tightly with a given protein. But it’s extremely important to realize that in
    reality, any given drug is going to interact with many different subsystems in
    the body. The study of such multifaceted interactions is broadly called polypharmacology.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们讨论过的，将为疾病设计药物的问题简化为设计与给定蛋白质紧密相互作用的药物的问题可能非常有用。但非常重要的是要意识到，实际上，任何给定的药物都将与人体中许多不同的子系统相互作用。研究这种多方面的相互作用被广泛称为多药效学。
- en: At present, computational methods for dealing with polypharmacology are still
    relatively undeveloped, so the gold standard for testing for polypharmacological
    effects remains animal and human experimentation. As computational techniques
    mature, this state of affairs may shift over the next few years.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，处理多药效学的计算方法仍然相对不发达，因此测试多药效的黄金标准仍然是动物和人体实验。随着计算技术的成熟，这种情况可能会在未来几年发生变化。
- en: Our goal therefore is to design learning algorithms that can effectively predict
    when a given molecule is going to interact with a given protein. How can we do
    this? For starters, we might borrow some of the techniques from the previous chapter
    on molecular machine learning and try to create a protein-specific model. Such
    a model would, given a dataset of molecules that either bind or don’t bind to
    a given protein, learn to predict for new molecules whether they bind or not.
    This idea isn’t actually terrible, but requires a good amount of data for the
    system at hand. Ideally, we’d have an algorithm that could work without a large
    amount of data for a new protein.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的目标是设计能够有效预测给定分子何时与给定蛋白质相互作用的学习算法。我们如何做到这一点呢？首先，我们可以借鉴上一章关于分子机器学习的一些技术，尝试创建一个特定于蛋白质的模型。这样一个模型将会在给定一组分子（无论是否与给定蛋白质结合）的数据集的情况下，学习预测新分子是否会结合。这个想法实际上并不糟糕，但需要大量的数据来适应当前系统。理想情况下，我们希望有一种算法，可以在没有大量数据的情况下为新蛋白质工作。
- en: The trick, it turns out, is to use the physics of the protein. As we will discuss
    in the next section, quite a bit is known about the physical structure of protein
    molecules. In particular, it’s possible to create snapshots of the 3D state of
    proteins using modern experimental techniques. These 3D snapshots can be fed into
    learning algorithms and used to predict binding. It’s also possible to take snapshots
    (better known as *structures*) of the interaction of proteins with smaller molecules
    (often called *ligands*). If this discussion seems abstract to you right now,
    don’t worry. You’ll be seeing plenty of practical code in this chapter.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，关键在于利用蛋白质的物理特性。正如我们将在下一节中讨论的那样，关于蛋白质分子的物理结构已经有了相当多的了解。特别是，可以使用现代实验技术创建蛋白质的3D状态的快照。这些3D快照可以输入学习算法中，并用于预测结合。还可以拍摄蛋白质与较小分子（通常称为配体）相互作用的快照。如果您现在觉得这个讨论很抽象，不用担心。在本章中，您将看到大量实用的代码。
- en: We’ll begin this chapter with a deeper overview of proteins and their function
    in biology. We will then shift into computer science and introduce some algorithms
    for featurizing protein systems which can transform biophysical systems into vectors
    or tensors for use in learning. In the last part of the chapter, we will work
    through an in-depth case study on constructing a protein–ligand binding interaction
    model. For experimentation,we will introduce the PDBBind dataset, which contains
    a collection of experimentally determined protein–ligand structures. We will demonstrate
    how to featurize this dataset with DeepChem. We will then build some models, both
    deep and simpler, on these featurized datasets and study their performance.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从更深入地概述蛋白质及其在生物学中的功能开始这一章。然后我们将转向计算机科学，并介绍一些用于将蛋白质系统特征化的算法，这些算法可以将生物物理系统转化为向量或张量以供学习使用。在本章的最后部分，我们将通过一个深入的案例研究来构建蛋白质-配体结合相互作用模型。为了进行实验，我们将介绍包含一系列实验确定的蛋白质-配体结构的PDBBind数据集。我们将演示如何使用DeepChem对这个数据集进行特征化。然后我们将在这些特征化的数据集上构建一些模型，包括深度模型和简单模型，并研究它们的性能。
- en: Why Is It Called Biophysics?
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么叫生物物理学？
- en: It is often said that all of biology is based on chemistry, and all of chemistry
    is based on physics. At first glance, biology and physics may seem far removed
    from one another. But as we will discuss at greater length later in this chapter,
    physical laws are at the heart of all biological mechanisms. In addition, much
    of the study of protein structure depends critically on the use of experimental
    techniques refined in physics. Manipulating nanoscale machines (for that’s what
    proteins actually are) requires considerable physical sophistication, on both
    the theoretical and the practical side.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 人们常说，所有生物学都基于化学，所有化学都基于物理。乍一看，生物学和物理学可能看起来相距甚远。但正如我们将在本章后面更详细地讨论的那样，物理定律是所有生物机制的核心。此外，蛋白质结构的研究很大程度上取决于在物理学中精细改进的实验技术的使用。操纵纳米尺度的机器（因为蛋白质实际上就是这样）需要在理论和实践方面具有相当的物理复杂性。
- en: It’s also interesting to note that the deep learning algorithms we will discuss
    in this chapter bear significant similarities to deep learning architectures used
    for studying systems from particle physics or for physical simulations. Such topics
    are outside the scope of this book, but we encourage interested readers to explore
    them further.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有趣的是，我们将在本章讨论的深度学习算法与用于研究粒子物理系统或物理模拟的深度学习架构存在显著相似之处。这些主题超出了本书的范围，但我们鼓励感兴趣的读者进一步探索。
- en: Protein Structures
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蛋白质结构
- en: Proteins are tiny machines that do most of the work in a cell. Despite their
    small size, they can be very complicated. A typical protein is made of thousands
    of atoms arranged in precise ways.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质是细胞中完成大部分工作的微型机器。尽管它们体积很小，但它们可能非常复杂。典型的蛋白质由数千个以精确方式排列的原子组成。
- en: To understand any machine, you must know what parts it is made of and how they
    are put together. You cannot hope to understand a car until you know it has wheels
    on the bottom, an empty space in the middle to hold passengers, and doors through
    which the passengers can enter and exit. The same is true of a protein. To understand
    how it works, you must know exactly how it is put together.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解任何机器，您必须知道它由哪些部分组成以及它们是如何组装在一起的。在了解汽车有底部的车轮、中间的空间用于搭载乘客以及乘客可以进出的门之前，您无法希望理解汽车。蛋白质也是如此。要理解它的工作原理，您必须确切地知道它是如何组装的。
- en: Furthermore, you need to know how it interacts with other molecules. Few machines
    operate in isolation. A car interacts with the passengers it carries, the road
    it drives on, and the energy source that allows it to move. This applies to most
    proteins as well. They act on molecules (for example, to catalyze a chemical reaction),
    are acted upon by others (for example, to regulate their activity), and draw energy
    from still others. All these interactions depend on the specific positioning of
    atoms in the two molecules. To understand them, you must know how the atoms are
    arranged in 3D space.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您需要知道它如何与其他分子相互作用。很少有机器是孤立运行的。汽车与搭载的乘客、行驶的道路以及使其移动的能源相互作用。这也适用于大多数蛋白质。它们作用于分子（例如，催化化学反应），被其他分子作用（例如，调节其活性），并从其他分子中吸取能量。所有这些相互作用取决于两个分子中原子的具体位置。要理解它们，您必须知道原子在三维空间中的排列方式。
- en: 'Unfortunately, you can’t just look at a protein under a microscope; they are
    far too small for that. Instead, scientists have had to invent complex and ingenious
    methods for determining the structures of proteins. At present there are three
    such methods: *X-ray crystallography*, *nuclear magnetic resonance* (NMR for short),
    and *cryo-electron microscopy* (cryo-EM for short).'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，您不能只是用显微镜观察蛋白质；它们太小了。相反，科学家们不得不发明复杂而巧妙的方法来确定蛋白质的结构。目前有三种这样的方法：X射线晶体学、核磁共振（简称NMR）和冷冻电子显微镜（简称cryo-EM）。
- en: X-ray crystallography is the oldest method, and still the most widely used.
    Roughly 90% of all known protein structures were determined with this method.
    Crystallography involves growing a crystal of the protein of interest (many molecules
    of the protein all tightly packed together in a regular repeating pattern). X-rays
    are then shone on the crystal, the scattered light is measured, and the results
    are analyzed to work out the structure of the individual molecules. Despite its
    success, this method has many limitations. It is slow and expensive even in the
    best cases. Many proteins do not form crystals, making crystallography impossible.
    Packing the protein into a crystal may alter its structure, so the result might
    be different from its structure in a living cell. Many proteins are flexible and
    can take on a range of structures, but crystallography only produces a single
    unmoving snapshot. But even with these limitations, it is a remarkably powerful
    and important tool.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: X射线晶体学是最古老的方法，仍然是最广泛使用的方法。大约90%已知的蛋白质结构是通过这种方法确定的。晶体学涉及生长感兴趣蛋白质的晶体（许多蛋白质分子紧密堆积在一起形成规律重复的图案）。然后在晶体上照射X射线，测量散射光，然后分析结果以确定单个分子的结构。尽管这种方法取得了成功，但它有许多限制。即使在最好的情况下，它也是缓慢且昂贵的。许多蛋白质无法形成晶体，使晶体学成为不可能。将蛋白质包装成晶体可能会改变其结构，因此结果可能与其在活细胞中的结构不同。许多蛋白质是灵活的，可以采取一系列结构，但晶体学只产生一个静止的快照。但即使有这些限制，它仍然是一个非常强大和重要的工具。
- en: NMR is the second most common method. It operates on proteins in solution, so
    there is no need to grow a crystal. This makes it an important alternative for
    proteins that cannot be crystallized. Unlike crystallography, which produces a
    single fixed snapshot, NMR produces an ensemble of structures representing the
    range of shapes the protein can take on in solution. This is a very important
    benefit, since it gives information about how the protein can move. Unfortunately,
    NMR has its own limitations. It requires a highly concentrated solution, so it
    is mostly limited to small, highly soluble proteins.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 核磁共振是第二常见的方法。它作用于溶液中的蛋白质，因此无需生长晶体。这使得它成为无法结晶的蛋白质的重要替代方法。与产生单个固定快照的晶体学不同，核磁共振产生代表蛋白质在溶液中可能呈现的形状范围的结构集合。这是一个非常重要的好处，因为它提供了有关蛋白质如何移动的信息。不幸的是，核磁共振也有其局限性。它需要高浓度的溶液，因此主要限于小型、高溶解性的蛋白质。
- en: In recent years, cryo-EM has emerged as a third option for determining protein
    structures. It involves rapidly freezing protein molecules, then imaging them
    with an electron microscope. Each image is far too low-resolution to make out
    the precise details; but by combining many different images, one can produce a
    final structure whose resolution is much higher than any individual electron microscope
    image. After decades of steady improvements to the methods and technologies, cryo-EM
    has finally begun to approach atomic resolution. Unlike crystallography and NMR,
    it works for large proteins that do not crystallize. This will probably make it
    a very important technique in the years to come.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，冷冻电镜已经成为确定蛋白质结构的第三种选择。它涉及迅速冷冻蛋白质分子，然后用电子显微镜对其进行成像。每个图像的分辨率远远不足以看清精确的细节；但通过结合许多不同的图像，可以产生一个最终结构，其分辨率比任何单个电子显微镜图像都要高得多。经过几十年对方法和技术的稳步改进，冷冻电镜终于开始接近原子分辨率。与晶体学和核磁共振不同，它适用于无法结晶的大型蛋白质。这可能使其成为未来几年中非常重要的技术。
- en: The [Protein Data Bank (PDB)](https://www.rcsb.org/) is the primary repository
    for known protein structures. At present it contains over 142,000 structures,
    like the one in [Figure 5-1](#capd-protein). That may seem like a lot, but it
    is far less than we really want. The number of known proteins is orders of magnitude
    larger, with more being discovered all the time. For any protein you want to study,
    there is a good chance that its structure is still unknown. And you really want
    many structures for each protein, not just one. Many proteins can exist in multiple
    functionally different states (for example, “active” and “inactive” states), so
    you want to know the structure of each state. If a protein binds to other molecules,
    you want a separate structure with the protein bound to each one so you can see
    exactly how they bind. The PDB is a fantastic resource, but the field as a whole
    is still in its “low data” stage. We have far less data than we want, and a major
    challenge is figuring out how to make the most of what we have. That is likely
    to remain true for decades.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[蛋白质数据银行（PDB）](https://www.rcsb.org/)是已知蛋白质结构的主要存储库。目前，它包含超过142,000个结构，如[图5-1](#capd-protein)中的结构。这可能看起来很多，但远远不及我们真正想要的。已知蛋白质的数量是数量级更大的，而且每时每刻都在发现更多。对于您想研究的任何蛋白质，很有可能其结构仍然未知。而且您确实希望每种蛋白质有多个结构，而不仅仅是一个。许多蛋白质可以存在于多种功能上不同的状态（例如，“活跃”和“非活跃”状态），因此您希望了解每种状态的结构。如果蛋白质与其他分子结合，您希望有一个单独的结构，其中蛋白质与每个分子结合，以便您可以准确地看到它们如何结合。PDB是一个很棒的资源，但整个领域仍处于“低数据”阶段。我们拥有的数据远远不及我们想要的，一个主要挑战是弄清如何充分利用我们所拥有的数据。这可能会持续几十年。'
- en: '![A crystal structure of the CapD protein from Bacillus anthracis, the anthrax
    pathogen. Determining the structures of bacterial proteins can be a powerful tool
    for antibiotic design. More generally, identifying the structure of a therapeutically
    relevant protein is one of the key steps in modern drug discovery.](Images/dlls_0501.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![来自炭疽芽孢杆菌的CapD蛋白的晶体结构，炭疽病原体。确定细菌蛋白质的结构可以成为抗生素设计的有力工具。更一般地说，确定与治疗相关的蛋白质的结构是现代药物发现的关键步骤之一。](Images/dlls_0501.png)'
- en: Figure 5-1\. A crystal structure of the CapD protein from Bacillus anthracis,
    the anthrax pathogen. Determining the structures of bacterial proteins can be
    a powerful tool for antibiotic design. More generally, identifying the structure
    of a therapeutically relevant protein is one of the key steps in modern drug discovery.
  id: totrans-22
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-1。来自炭疽芽孢杆菌的CapD蛋白的晶体结构，炭疽病原体。确定细菌蛋白质的结构可以成为抗生素设计的有力工具。更一般地说，确定与治疗相关的蛋白质的结构是现代药物发现的关键步骤之一。
- en: Protein Sequences
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 蛋白质序列
- en: So far in this chapter, we’ve primarily discussed protein structures, but we
    haven’t yet said much about what proteins are made of atomically. Proteins are
    built out of fundamental building blocks called *amino acids*. These amino acids
    are sets of molecules that share a common core, but have different “side chains”
    attached ([Figure 5-2](#amino-acid)). These different side chains alter the behavior
    of the protein.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本章中，我们主要讨论了蛋白质的结构，但我们还没有详细说明蛋白质在原子层面上由什么构成。蛋白质是由称为*氨基酸*的基本构建块构建而成。这些氨基酸是一组共享共同核心的分子，但具有不同的“侧链”附着（[图5-2](#amino-acid)）。这些不同的侧链改变了蛋白质的行为。
- en: A protein is a chain of amino acids linked one to the next to the next ([Figure 5-3](#four-amino-acids)).
    The start of the amino acid chain is typically referred to as the N-terminus,
    while the end of the chain is called the C-terminus. Small chains of amino acids
    are commonly called *peptides*, while longer chains are called proteins. Peptides
    are too small to have complex 3D structures, but the structures of proteins can
    be very complicated.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质是一条氨基酸链，一个接一个地连接在一起（[图5-3](#four-amino-acids)）。氨基酸链的起始部分通常被称为N-末端，而链的末端被称为C-末端。小的氨基酸链通常被称为*肽*，而较长的链被称为蛋白质。肽太小，无法具有复杂的三维结构，但蛋白质的结构可以非常复杂。
- en: '![Amino acids are the building blocks of protein structures. This diagram represents
    the chemical structures of a number of commonly seen amino acids.](Images/dlls_0502.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![氨基酸是蛋白质结构的构建块。这张图表示了一些常见氨基酸的化学结构。](Images/dlls_0502.png)'
- en: Figure 5-2\. Amino acids are the building blocks of protein structures. This
    diagram represents the chemical structures of a number of commonly seen amino
    acids. (Adapted from [Wikimedia](https://commons.wikimedia.org/wiki/File:Overview_proteinogenic_amino_acids-DE.svg).)
  id: totrans-27
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-2。氨基酸是蛋白质结构的构建块。这张图表示了一些常见氨基酸的化学结构。（改编自[维基媒体](https://commons.wikimedia.org/wiki/File:Overview_proteinogenic_amino_acids-DE.svg)。）
- en: '![A chain of four amino acids, with the N-terminus on the left and the C-terminus
    on the right.](Images/dlls_0503.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![一个由四个氨基酸组成的链，N-末端在左侧，C-末端在右侧。](Images/dlls_0503.png)'
- en: 'Figure 5-3\. A chain of four amino acids, with the N-terminus on the left and
    the C-terminus on the right. (Source: [Wikipedia](https://en.wikipedia.org/wiki/N-terminus#/media/File:Tetrapeptide_structural_formulae_v.1.png).)'
  id: totrans-29
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-3。一个由四个氨基酸组成的链，N-末端在左侧，C-末端在右侧。（来源：[维基百科](https://en.wikipedia.org/wiki/N-terminus#/media/File:Tetrapeptide_structural_formulae_v.1.png)。）
- en: It’s worth noting that while most proteins take a rigid shape, there are also
    intrinsically disordered proteins which have regions that refuse to take rigid
    shapes ([Figure 5-4](#sumo-1-protein)).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，虽然大多数蛋白质具有刚性形状，但也有固有无序蛋白质，其区域不愿采取刚性形状（[图5-4](#sumo-1-protein)）。
- en: '![A snapshot of the SUMO-1 protein. The central core of the protein has structure,
    while the N-terminal and C-terminal regions are disordered. Intrinsically disordered
    proteins such as SUMO-1 are challenging to handle computationally.](Images/dlls_0504.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![SUMO-1蛋白的快照。蛋白质的中心核心具有结构，而N-末端和C-末端区域是无序的。像SUMO-1这样的固有无序蛋白质在计算上是具有挑战性的。](Images/dlls_0504.png)'
- en: Figure 5-4\. A snapshot of the SUMO-1 protein. The central core of the protein
    has structure, while the N-terminal and C-terminal regions are disordered. Intrinsically
    disordered proteins such as SUMO-1 are challenging to handle computationally.
  id: totrans-32
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-4。SUMO-1蛋白的快照。蛋白质的中心核心具有结构，而N-末端和C-末端区域是无序的。像SUMO-1这样的固有无序蛋白质在计算上是具有挑战性的。
- en: In the remainder of this chapter, we will primarily deal with proteins that
    have rigid, 3D shapes. Dealing with floppy structures with no set shape is still
    challenging for modern computational techniques.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，我们将主要讨论具有刚性、三维形状的蛋白质。处理没有固定形状的松散结构对现代计算技术仍然是具有挑战性的。
- en: Can’t We Predict 3D Protein Structure Computationally?
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们不能通过计算来预测三维蛋白质结构吗？
- en: After reading this section, you might wonder why we don’t use algorithms to
    directly predict the structure of interesting protein molecules rather than depending
    on complex physical experiments. It’s a good question, and there have in fact
    been decades of work on the computational prediction of protein structure.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读本节后，您可能会想知道为什么我们不直接使用算法来预测有趣的蛋白质分子的结构，而是依赖复杂的物理实验。这是一个很好的问题，实际上已经有几十年的关于计算预测蛋白质结构的工作。
- en: There are two main approaches to predicting protein structures. The first is
    called *homology modeling*. Protein sequences and structures are the product of
    billions of years of evolution. If two proteins are near relatives (the technical
    term is “homologs”) that only recently diverged from each other, they probably
    have similar structures. To predict a protein’s structure by homology modeling,
    you first look for a homolog whose structure is already known, then try to adjust
    it based on differences between the sequences of the two proteins. Homology modeling
    works reasonably well for determining the overall shape of a protein, but it often
    gets details wrong. And of course, it requires that you already know the structure
    of a homologous protein.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 预测蛋白质结构有两种主要方法。第一种被称为*同源建模*。蛋白质序列和结构是亿万年演化的产物。如果两个蛋白质是近亲（技术术语是“同源物”），它们可能具有相似的结构。通过同源建模预测蛋白质的结构，您首先寻找一个结构已知的同源物，然后根据两种蛋白质序列之间的差异进行调整。同源建模对于确定蛋白质的整体形状效果还不错，但通常会出现细节错误。当然，这要求您已经知道一个同源蛋白质的结构。
- en: The other main approach is *physical modeling*. Using knowledge of the laws
    of physics, you try to explore many different conformations the protein might
    take on and predict which one will be most stable. This method requires enormous
    amounts of computing time. Until about a decade ago, it simply was impossible.
    Even today it is only practical for small, fast-folding proteins. Furthermore,
    it requires physical approximations to speed up the calculation, and those reduce
    the accuracy of the result. Physical modeling will often predict the right structure,
    but not always.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种主要方法是*物理建模*。利用物理定律的知识，您尝试探索蛋白质可能采取的许多不同构象，并预测哪种构象最稳定。这种方法需要大量的计算时间。直到大约十年前，这是不可能的。即使在今天，它也只适用于小型、快速折叠的蛋白质。此外，它需要物理近似来加快计算速度，这些近似会降低结果的准确性。物理建模通常会预测正确的结构，但并非总是如此。
- en: A Short Primer on Protein Binding
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 蛋白质结合简介
- en: 'We’ve discussed a good amount about protein structure so far in this chapter,
    but we haven’t said much about how proteins interact with other molecules ([Figure 5-5](#protein-embedded-membrane)).
    In practice, proteins often bind to small molecules. Sometimes that binding behavior
    is central to the protein’s function: the main role for a given protein can involve
    binding to particular molecules. For example, signaling transduction in cells
    often passes messages via the mechanism of a protein binding to another molecule.
    Other times, the molecule binding to the protein is foreign: possibly a drug we’ve
    created to manipulate the protein, possibly a toxin that interferes with its function.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本章我们已经讨论了大量关于蛋白质结构的内容，但我们并没有多说蛋白质如何与其他分子相互作用。在实践中，蛋白质通常与小分子结合。有时，这种结合行为对蛋白质的功能至关重要：给定蛋白质的主要作用可能涉及与特定分子的结合。例如，细胞中的信号传导通常通过蛋白质与另一种分子结合的机制传递信息。有时，结合到蛋白质的分子是外来的：可能是我们创造的用于操纵蛋白质的药物，可能是干扰其功能的毒素。
- en: '![A signal transduced via a protein embedded in a cell''s membrane.](Images/dlls_0505.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![通过嵌入在细胞膜中的蛋白质传导的信号。](Images/dlls_0505.png)'
- en: 'Figure 5-5\. A signal transduced via a protein embedded in a cell’s membrane.
    (Source: [Wikimedia](https://simple.wikipedia.org/wiki/Signal_transduction#/media/File:The_External_Reactions_and_the_Internal_Reactions.jpg).)'
  id: totrans-41
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-5. 通过嵌入在细胞膜中的蛋白质传导的信号。（来源：[维基百科](https://simple.wikipedia.org/wiki/Signal_transduction#/media/File:The_External_Reactions_and_the_Internal_Reactions.jpg)。）
- en: Understanding the details of how, where, and when molecules bind to proteins
    is critical to understanding their functions and developing drugs. If we can coopt
    the signaling mechanisms of cells in the human body, we can induce desired medical
    responses in the body.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 了解分子如何、何时、何地与蛋白质结合对于理解它们的功能并开发药物至关重要。如果我们能够利用人体细胞的信号传导机制，我们就可以在人体中引发期望的医学反应。
- en: Protein binding involves lots of very specific interactions, which makes it
    hard to predict computationally. A tiny change in the positions of just a few
    atoms can determine whether or not a molecule binds to a protein. Furthermore,
    many proteins are flexible and constantly moving. A protein might be able to bind
    a molecule when it’s in certain conformations, but not when it’s in others. Binding
    in turn may cause further changes to a protein’s conformation, and thus to its
    function.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质结合涉及许多非常特定的相互作用，这使得计算预测变得困难。仅仅几个原子位置的微小变化就可以决定分子是否与蛋白质结合。此外，许多蛋白质是灵活的，不断移动。蛋白质可能在特定构象时能够结合分子，但在其他构象时则不能。结合反过来可能导致蛋白质构象的进一步变化，从而影响其功能。
- en: In the remainder of this chapter, we will use the challenge of understanding
    protein binding as a motivating computational example. We will delve in depth
    into current deep learning and machine learning approaches for making predictions
    about binding events.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的其余部分，我们将以理解蛋白质结合的挑战作为激励计算的示例。我们将深入探讨当前深度学习和机器学习方法，以预测结合事件。
- en: Biophysical Featurizations
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生物物理特征化
- en: As we discussed in the previous chapter, one of the crucial steps in applying
    machine learning to a new domain is figuring out how to transform (or featurize)
    training data to a format suitable for learning algorithms. We’ve discussed a
    number of techniques for featurizing individual small molecules. Could we perhaps
    adapt these techniques for use in biophysical systems?
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在上一章中讨论的那样，将机器学习应用于新领域的关键步骤之一是找出如何将训练数据转换（或特征化）为适合学习算法的格式。我们已经讨论了许多特征化单个小分子的技术。也许我们可以将这些技术调整为在生物物理系统中使用？
- en: Unfortunately, the behaviors of biophysical systems are critically constrained
    by their 3D structures, so the 2D techniques from previous chapters miss crucial
    information. As a result, we will discuss a pair of new featurization techniques
    in this chapter. The first featurization technique, the *grid featurization*,
    explicitly searches a 3D structure for the presence of critical physical interactions
    such as hydrogen bonds and salt bridges (more on these later), which are known
    to play an important role in determining protein structure. The advantage of this
    technique is that we can rely upon a wealth of known facts about protein physics.
    The weakness, of course, is that we are bound by known physics and lessen the
    chance that our algorithms will be able to detect new physics.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，生物物理系统的行为受到它们的3D结构的严格限制，因此前几章的2D技术缺少关键信息。因此，我们将在本章讨论一对新的特征化技术。第一种特征化技术，*网格特征化*，明确搜索3D结构中关键物理相互作用的存在，例如氢键和盐桥（稍后会详细介绍），这些相互作用已知在决定蛋白质结构中起重要作用。这种技术的优势在于我们可以依赖大量关于蛋白质物理的已知事实。当然，弱点在于我们受到已知物理的约束，减少了我们的算法能够检测新物理的机会。
- en: The alternative featurization technique is the *atomic featurization*, which
    simply provides a processed representation of the 3D positions and identities
    of all atoms in the system. This makes the challenge for the learning algorithm
    considerably harder, since it must learn to identify critical physical interactions,
    but it also makes it feasible for learning algorithms to detect new patterns of
    interesting behavior.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种特征化技术是*原子特征化*，它简单地提供了系统中所有原子的3D位置和身份的处理表示。这使得学习算法的挑战变得更加困难，因为它必须学会识别关键的物理相互作用，但也使得学习算法能够检测到有趣行为的新模式。
- en: PDB Files and Their Pitfalls
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PDB文件及其缺陷
- en: Protein structures are often stored in PDB files. Such files are simply text
    files that contain descriptions of the atoms in the structure and their positions
    in coordinate space relative to one another. Featurization algorithms typically
    rely on libraries that read in PDB files and store them into in-memory data structures.
    So far so good, right?
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质结构通常存储在PDB文件中。这些文件只是包含结构中原子描述及其相对于彼此的坐标空间位置的文本文件。特征化算法通常依赖于读取PDB文件并将其存储到内存数据结构中的库。到目前为止一切顺利，对吧？
- en: Unfortunately, PDB files are often malformed. The reason lies in the underlying
    physics. Often, an experiment will fail to have adequate resolution to completely
    specify a portion of the protein’s structure. Such regions are left unspecified
    in the PDB file, so it’s common to find that many atoms or even entire substructures
    of the protein are missing from the core structure.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，PDB文件经常存在格式错误。原因在于底层物理学。通常，实验无法提供足够的分辨率来完全指定蛋白质结构的某个部分。这些区域在PDB文件中未指定，因此很常见地发现许多原子甚至整个蛋白质的亚结构缺失在核心结构中。
- en: Libraries such as DeepChem will often attempt to do the “right” thing and algorithmically
    fill in such missing regions. It’s important to note that this cleanup is only
    approximate, and there’s still no entirely satisfactory replacement to having
    an expert human peer at the protein structure (in a suitable viewing program)
    and point out issues. Hopefully, software tooling to handle these errors will
    improve over the next few years and the need for expert guidance will lessen.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: DeepChem等库通常会尝试做“正确”的事情，并通过算法填补这些缺失区域。重要的是要注意，这种清理只是近似的，仍然没有完全令人满意的替代方案，即让专业人员在蛋白质结构（在适当的查看程序中）上查找问题。希望在未来几年内，处理这些错误的软件工具将得到改进，对专家指导的需求将减少。
- en: Grid Featurization
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网格特征化
- en: By converting biophysical structures into vectors, we can use machine learning
    algorithms to make predictions about them. It stands to reason that it would be
    useful to have a featurization algorithm for processing protein–ligand systems.
    However, it’s quite nontrivial to devise such an algorithm. Ideally, a featurization
    technique would need to have significant knowledge about the chemistry of such
    systems baked into it by design, so it could pull out useful features.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将生物物理结构转换为向量，我们可以使用机器学习算法对其进行预测。可以想象，为处理蛋白质-配体系统而设计特征化算法将是有用的。然而，设计这样的算法是相当困难的。理想情况下，特征化技术需要在设计中将这些系统的化学知识融入其中，以便提取有用的特征。
- en: These features might include, for example, counts of noncovalent bonds between
    the protein and ligand, such as hydrogen bonds or other interactions. (Most protein–ligand
    systems don’t have covalent bonds between the protein and ligand.)
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些特征可能包括蛋白质和配体之间的非共价键的计数，例如氢键或其他相互作用。（大多数蛋白质-配体系统之间没有蛋白质和配体之间的共价键。）
- en: Luckily for us, DeepChem has such a featurizer available. Its `RdkitGridFeaturizer`
    summarizes a set of relevant chemical information into a brief vector for use
    in learning algorithms. While it’s not necessary to understand the underlying
    science in depth to use the featurizer, it will still be useful to have a basic
    understanding of the underlying physics. So, before we dive into a description
    of what the grid featurizer computes, we will first review some of the pertinent
    biophysics of macromolecular complexes.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，DeepChem有这样一个可用的特征化器。其`RdkitGridFeaturizer`将一组相关的化学信息总结为一个简短的向量，用于学习算法。虽然不必深入了解底层科学就能使用特征化器，但了解底层物理学仍然是有用的。因此，在我们深入描述网格特征化器计算之前，我们将首先回顾一些有关大分子复合物的相关生物物理学。
- en: While reading this section, it may be useful to refer back to the discussion
    of basic chemical interactions in the previous chapter. Ideas such as covalent
    and noncovalent bonds will pop up quite a bit.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本节时，可能有必要回顾前一章中关于基本化学相互作用的讨论。共价键和非共价键等概念将经常出现。
- en: The grid featurizer searches for the presence of such chemical interactions
    within a given structure and constructs a feature vector that contains counts
    of these interactions. We will say more about how this is done algorithmically
    later in the chapter.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 网格特征化器在给定结构中搜索这种化学相互作用的存在，并构建一个包含这些相互作用计数的特征向量。我们将在本章后面更详细地介绍这是如何通过算法完成的。
- en: Hydrogen bonds
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 氢键
- en: When a hydrogen atom is covalently bonded to a more electronegative atom such
    as oxygen or nitrogen, the shared electrons spend most of their time closer to
    the more electronegative atom. This leaves the hydrogen with a net positive charge.
    If that positively charged hydrogen then gets close to another atom with a net
    negative charge, they are attracted to each other. That is a hydrogen bond ([Figure 5-6](#hydrogen-bonding)).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当氢原子与氧或氮等更电负原子共价键合时，共享电子大部分时间都靠近更电负的原子。这使得氢带有净正电荷。如果这个带正电的氢接近另一个带有净负电荷的原子，它们会相互吸引。这就是氢键（[图5-6](#hydrogen-bonding)）。
- en: '![A rendered example of a hydrogen bond. Excess negative charge on the oxygen
    interacts with excess positive charge on the hydrogen, creating a bonding interaction.](Images/dlls_0506.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![氢键的渲染示例。氧上的过剩负电荷与氢上的过剩正电荷相互作用，形成键合作用。](Images/dlls_0506.png)'
- en: 'Figure 5-6\. A rendered example of a hydrogen bond. Excess negative charge
    on the oxygen interacts with excess positive charge on the hydrogen, creating
    a bonding interaction. (Source: [Wikimedia](https://commons.wikimedia.org/wiki/File:Hydrogen-bonding-in-water-2D.png).)'
  id: totrans-62
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-6。氢键的渲染示例。氧上的过剩负电荷与氢上的过剩正电荷相互作用，形成键合作用。（来源：[Wikimedia](https://commons.wikimedia.org/wiki/File:Hydrogen-bonding-in-water-2D.png)。）
- en: Because hydrogen atoms are so small, they can get very close to other atoms,
    leading to a strong electrostatic attraction. This makes hydrogen bonds one of
    the strongest noncovalent interactions. They are a critical form of interaction
    that often stabilizes molecular systems. For example, water’s unique properties
    are due in large part to the network of hydrogen bonds that form between water
    molecules.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 由于氢原子非常小，它们可以非常靠近其他原子，导致强烈的静电吸引力。这使得氢键成为最强的非共价相互作用之一。它们是一种通常稳定分子系统的关键相互作用形式。例如，水独特的性质很大程度上归因于水分子之间形成的氢键网络。
- en: The `RdkitGridFeaturizer` attempts to count the hydrogen bonds present in a
    structure by checking for pairs of protein/ligand atoms of the right types that
    are suitably close to one another. This requires applying a cutoff to the distance,
    which is somewhat arbitrary. In reality there is not a sharp division between
    atoms being bonded and not bonded. This may lead to some misidentified interactions,
    but empirically, a simple cutoff tends to work reasonably well.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '`RdkitGridFeaturizer`尝试通过检查适当接近的蛋白质/配体原子对来计算结构中存在的氢键。这需要对距离应用一个截断，这在某种程度上是任意的。实际上，原子之间不存在明确的成键和非成键之间的分界线。这可能导致一些被错误识别的相互作用，但经验上，简单的截断通常效果还不错。'
- en: Salt bridges
  id: totrans-65
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 盐桥
- en: A salt bridge is a noncovalent attraction between two amino acids, where one
    has a positive charge and the other has a negative charge (see [Figure 5-7](#salt-bridge)).
    It combines both ionic bonding and hydrogen bonding. Although these bonds are
    relatively weak, they can help stabilize the structure of a protein by providing
    an interaction between distant amino acids in the protein’s sequence.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 盐桥是两个氨基酸之间的一种非共价吸引力，其中一个带有正电荷，另一个带有负电荷（见图5-7）。它结合了离子键和氢键。尽管这些键相对较弱，但它们可以通过在蛋白质序列中远距离的氨基酸之间提供相互作用来帮助稳定蛋白质的结构。
- en: '![An illustration of a salt bridge between glutamic acid and lysine. The salt
    bridge is a combination of an ionic-style electrostatic interaction and a hydrogen
    bond and serves to stabilize the structure.](Images/dlls_0507.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![谷氨酸和赖氨酸之间盐桥的插图。盐桥是一种离子式静电相互作用和氢键的组合，用于稳定结构。](Images/dlls_0507.png)'
- en: 'Figure 5-7\. An illustration of a salt bridge between glutamic acid and lysine.
    The salt bridge is a combination of an ionic-style electrostatic interaction and
    a hydrogen bond and serves to stabilize the structure. (Source: [Wikimedia](https://commons.wikimedia.org/wiki/File:Revisited_Glutamic_Acid_Lysine_salt_bridge.png).)'
  id: totrans-68
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-7。谷氨酸和赖氨酸之间盐桥的插图。盐桥是一种离子式静电相互作用和氢键的组合，用于稳定结构。（来源：[Wikimedia](https://commons.wikimedia.org/wiki/File:Revisited_Glutamic_Acid_Lysine_salt_bridge.png)。）
- en: The grid featurizer attempts to detect salt bridges by explicitly checking for
    pairs of amino acids (such as glutamic acid and lysine) that are known to form
    such interactions, and that are in close physical proximity in the 3D structure
    of the protein.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 网格特征化器尝试通过明确检查已知形成这种相互作用的氨基酸对（如谷氨酸和赖氨酸），并且在蛋白质的三维结构中处于密切物理接近的位置来检测盐桥。
- en: Pi-stacking interactions
  id: totrans-70
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pi-堆叠相互作用
- en: Pi-stacking interactions are a form of noncovalent interaction between *aromatic
    rings* ([Figure 5-8](#aromatic-ring)). These are flat, ring-shaped structures
    that appear in many biological molecules, including DNA and RNA. They also appear
    in the side chains of some amino acids, including phenylalanine, tyrosine, and
    tryptophan.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Pi-堆叠相互作用是*芳香环*之间的一种非共价相互作用（图5-8）。这些是平坦的、环形的结构，出现在许多生物分子中，包括DNA和RNA。它们还出现在一些氨基酸的侧链中，包括苯丙氨酸、酪氨酸和色氨酸。
- en: '![An aromatic ring in the benzene molecule. Such ring structures are known
    for their exceptional stability. In addition, aromatic rings have all their atoms
    lying in a plane. Heterogeneous rings, in contrast, don''t have their atoms occupying
    the same plane.](Images/dlls_0508.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![苯分子中的芳香环。这种环结构以其异常稳定性而闻名。此外，芳香环中的所有原子都位于同一平面上。相比之下，非同质环的原子并不在同一平面上。](Images/dlls_0508.png)'
- en: Figure 5-8\. An aromatic ring in the benzene molecule. Such ring structures
    are known for their exceptional stability. In addition, aromatic rings have all
    their atoms lying in a plane. Heterogeneous rings, in contrast, don’t have their
    atoms occupying the same plane.
  id: totrans-73
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-8。苯分子中的芳香环。这种环结构以其异常稳定性而闻名。此外，芳香环中的所有原子都位于同一平面上。相比之下，非同质环的原子并不在同一平面上。
- en: Roughly speaking, pi-stacking interactions occur when two aromatic rings “stack”
    on top of each other. [Figure 5-9](#noncovalent-rings) shows some of the ways
    in which two benzene rings can interact. Such stacking interactions, like salt
    bridges, can help stabilize various macromolecular structures. Importantly, pi-stacking
    interactions can be found in ligand-protein interactions, since aromatic rings
    are often found in small molecules. The grid featurizer counts these interactions
    by detecting the presence of aromatic rings and checking for the distances between
    their centroids and the angles between their two planes.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 粗略地说，pi-堆叠相互作用发生在两个芳香环“堆叠”在一起时。图5-9显示了两个苯环可以相互作用的一些方式。这种堆叠相互作用，就像盐桥一样，可以帮助稳定各种大分子结构。重要的是，pi-堆叠相互作用可以在配体-蛋白相互作用中找到，因为芳香环通常出现在小分子中。网格特征化器通过检测芳香环的存在并检查它们的质心之间的距离和两个平面之间的角度来计算这些相互作用。
- en: '![Various noncovalent aromatic ring interactions. In the displaced interaction,
    the centers of the two aromatic rings are slightly displaced from one another.
    In edge-to-face interactions, one aromatic ring''s edge stacks on another''s face.
    The sandwich configuration has two rings stacked directly, but is less energetically
    favorable than displaced or edge-to-face interactions since regions with the same
    charge interact closely.](Images/dlls_0509.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
- en: Figure 5-9\. Various noncovalent aromatic ring interactions. In the displaced
    interaction, the centers of the two aromatic rings are slightly displaced from
    one another. In edge-to-face interactions, one aromatic ring’s edge stacks on
    another’s face. The sandwich configuration has two rings stacked directly, but
    is less energetically favorable than displaced or edge-to-face interactions since
    regions with the same charge interact closely.
  id: totrans-76
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
- en: At this point, you might be wondering why this type of interaction is called
    pi-stacking. The name refers to pi-bonds, a form of covalent chemical bond where
    the electron orbitals of two covalently bonded atoms overlap. In an aromatic ring,
    all the atoms in the ring participate in a joint pi-bond. This joint bond accounts
    for the stability of the aromatic ring and also explains many of its unique chemical
    properties.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: For those readers who aren’t chemists, don’t worry too much if this material
    doesn’t make too much sense just yet. DeepChem abstracts away many of these implementation
    details, so you won’t need to worry much about pi-stacking on a regular basis
    when developing. However, it is useful to know that these interactions exist and
    play a major role in the underlying chemistry.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: Intricate Geometries and Snapshots
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, we’ve introduced a number of interactions in terms of static
    geometric configurations. It’s very important to realize that bonds are dynamic
    entities, and that in real physical systems, bonds will stretch, snap, break,
    and reform with dizzying speed. Keep this in mind, and note that when someone
    says a salt bridge exists, what they really mean is that in some statistically
    average sense, a salt bridge is likely present more often than not at a particular
    location.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: Fingerprints
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: From the previous chapter, you may recall the use of circular fingerprints.
    These fingerprints count the number of fragments of a given type in the molecule,
    then use a hash function to fit these fragment counts into a fixed-length vector.
    Such fragment counts can be used for 3D molecular complexes as well. Although
    merely counting the fragments is often insufficient to compute the geometry of
    the system, the knowledge of present fragments can nevertheless be useful for
    machine learning systems. This might perhaps be due to the fact that the presence
    of certain fragments can be strongly indicative of some molecular events.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Some implementation details
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To search for chemical features such as hydrogen bonds, the `dc.feat.RdkitGridFeaturizer`
    needs to be able to effectively work with the geometry of the molecule. DeepChem
    uses the RDKit library to load each molecule, protein, and ligand, into a common
    in-memory object. These molecules are then transformed into NumPy arrays that
    contain the positions of all the atoms in space. For example, a molecule with
    *N* atoms can be represented as a NumPy array of shape `(*N*, 3)`, where each
    row represents the position of an atom in 3D space.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Then, performing a (crude) detection of a hydrogen bond simply requires looking
    at all pairs of atoms that could conceivably form a hydrogen bond (such as oxygen
    and hydrogen) that are sufficiently close to one another. The same computational
    strategy is used for detecting other kinds of bonds.  For handling aromatic structures,
    there’s a bit of special code to detect the presence of aromatic rings in the
    structure and compute their centroids.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
- en: Atomic Featurization
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At the end of the previous section, we gave a brief overview of how features
    such as hydrogen bonds are computed by the `RdkitGridFeaturizer`. Most operations
    transform a molecule with *N* atoms into a NumPy array of shape `(*N*, 3)` and
    then perform a variety of extra computations starting from these arrays.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节的结尾，我们简要概述了`RdkitGridFeaturizer`如何计算氢键等特征。大多数操作将具有*N*个原子的分子转换为形状为`(*N*,
    3)`的NumPy数组，然后从这些数组开始执行各种额外的计算。
- en: You can easily imagine that featurization for a given molecule could simply
    involve computing this `(*N*, 3)` array and passing it to a suitable machine learning
    algorithm. The model could then learn for itself what features were important,
    rather than relying on a human to select them and code them by hand.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以轻松想象，为给定分子进行特征化可能只涉及计算这个`(*N*, 3)`数组并将其传递给适当的机器学习算法。然后，模型可以自行学习哪些特征是重要的，而不是依赖人类选择并手动编码它们。
- en: In fact, this turns out to work—with a couple of extra steps. The `(*N*, 3)`
    position array doesn’t distinguish atom types, so you also need to provide another
    array that lists the atomic number of each atom. As a second implementation-driven
    note, computing pairwise distances between two position arrays of shape `(*N*,
    3)` can be very computationally expensive. It’s useful to create “neighbor lists”
    in a preprocessing step, where the neighbor list maintains a list of neighboring
    atoms close to any given atom.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，这是可以实现的，只需多做几个步骤。`(*N*, 3)`位置数组不区分原子类型，因此您还需要提供另一个数组，列出每个原子的原子序数。作为第二个实现驱动的注意事项，计算形状为`(*N*,
    3)`的两个位置数组之间的成对距离可能非常耗费计算资源。在预处理步骤中创建“邻居列表”是有用的，其中邻居列表维护了靠近任何给定原子的邻近原子的列表。
- en: DeepChem provides a `dc.feat.ComplexNeighborListFragmentAtomicCoordinates` featurizer
    that handles much of this for you. We will not discuss it further in this chapter,
    but it’s good to know that it exists as another option.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: DeepChem提供了一个`dc.feat.ComplexNeighborListFragmentAtomicCoordinates`特征化器，可以为您处理其中的大部分内容。我们不会在本章进一步讨论它，但知道它作为另一个选择是很好的。
- en: The PDBBind Case Study
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PDBBind案例研究
- en: With this introduction in place, let’s start tinkering with some code samples
    for handling biophysical datasets. We will start by introducing the PDBBind dataset
    and the problem of binding free energy prediction. We will then provide code examples
    of how to featurize the PDBBind dataset and demonstrate how to build machine learning
    models for it. We will end the case study with a discussion of how to evaluate
    the results.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个介绍，让我们开始尝试处理生物物理数据集的一些代码示例。我们将首先介绍PDBBind数据集和结合自由能预测问题。然后，我们将提供如何对PDBBind数据集进行特征化的代码示例，并演示如何为其构建机器学习模型。我们将以讨论如何评估结果结束案例研究。
- en: PDBBind Dataset
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PDBBind数据集
- en: The PDBBind dataset contains a large number of biomolecular crystal structures
    and their binding affinities. There’s a bit of jargon there, so let’s stop and
    unpack it. A biomolecule is any molecule of biological interest. That includes
    not just proteins, but also nucleic acids (such as DNA and RNA), lipids, and smaller
    drug-like molecules. Much of the richness of biomolecular systems results from
    the interactions of various biomolecules with one another (as we’ve discussed
    at length already). A binding affinity is the experimentally measured affinity
    of two molecules to form a complex, with the two molecules interacting. If it
    is energetically favorable to form such a complex, the molecules will spend more
    time in that configuration as opposed to another one.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: PDBBind数据集包含大量生物分子晶体结构及其结合亲和力。有一些术语，让我们停下来解释一下。生物分子是任何生物感兴趣的分子。这不仅包括蛋白质，还包括核酸（如DNA和RNA）、脂质和较小的药物样分子。生物分子系统的丰富性很大程度上来自各种生物分子之间的相互作用（我们已经详细讨论过）。结合亲和力是两种分子形成复合物的实验测定亲和力，这两种分子相互作用。如果形成这样的复合物是能量有利的，那么分子将更多时间保持在这种构型中，而不是其他构型中。
- en: The PDBBind dataset has gathered structures of a number of biomolecular complexes.
    The large majority of these are protein–ligand complexes, but the dataset also
    contains protein–protein, protein–nucleic acid, and nucleic acid–ligand complexes.
    For our purposes, we will focus on the protein–ligand subset. The full dataset
    contains close to 15,000 such complexes, with the “refined” and “core” sets containing
    smaller but cleaner subsets of complexes. Each complex is annotated with an experimental
    measurement of the binding affinity for the complex. The learning challenge for
    the PDBBind dataset is to predict the binding affinity for a complex given the
    protein–ligand structure.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: PDBBind数据集已经收集了许多生物分子复合物的结构。其中绝大多数是蛋白质-配体复合物，但数据集还包含蛋白质-蛋白质、蛋白质-核酸和核酸-配体复合物。对于我们的目的，我们将专注于蛋白质-配体子集。完整数据集包含近15000个这样的复合物，其中“精炼”和“核心”集合包含更小但更干净的复合物子集。每个复合物都附带了对该复合物的结合亲和力的实验测量。PDBBind数据集的学习挑战是根据蛋白质-配体结构预测复合物的结合亲和力。
- en: The data for PDBBind is gathered from the Protein Data Bank. Note that the data
    in the PDB (and consequently PDBBind) is highly heterogeneous! Different research
    groups have different experimental setups, and there can be high experimental
    variance between different measurements by different groups. For this reason,
    we will primarily use the filtered refined subset of the PDBBind dataset for doing
    our experimental work.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: PDBBind的数据是从蛋白质数据银行中收集的。请注意，PDB（因此PDBBind）中的数据非常异质！不同的研究小组有不同的实验设置，不同小组进行的不同测量之间可能存在高实验方差。因此，我们将主要使用PDBBind数据集的经过筛选的精炼子集来进行我们的实验工作。
- en: Dynamics Matter!
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动态很重要！
- en: In this case study, we treat the protein and ligand as a frozen snapshot. Note
    that this is very unphysical! The protein and ligand are actually in rapid movement,
    and the ligand will move in and out of the protein’s binding pocket. In addition,
    the protein may not even have one fixed binding pocket. For some proteins, there
    are a number of different sites where potential ligands interact.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例研究中，我们将蛋白质和配体视为一个冻结的快照。请注意，这是非常不符合物理规律的！蛋白质和配体实际上在快速运动，配体会在蛋白质的结合口中进出。此外，蛋白质甚至可能没有一个固定的结合口。对于一些蛋白质，可能有多个不同的位点与潜在的配体相互作用。
- en: All these combinations of factors mean that our models will have relatively
    limited accuracy. If we had more data, it might be possible that strong learning
    models could learn to account for these factors, but with more limited datasets,
    it is challenging to do so.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些因素的组合意味着我们的模型的准确性将相对有限。如果我们有更多的数据，可能强大的学习模型可以学会考虑这些因素，但在数据集更有限的情况下，这是具有挑战性的。
- en: You should probably note this information. The design of better biophysical
    deep learning models to accurately account for the thermodynamic behavior of these
    systems remains a major open problem.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能应该注意这些信息。设计更好的生物物理深度学习模型以准确考虑这些系统的热力学行为仍然是一个重要的未解问题。
- en: What If You Don’t Have a Structure?
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如果您没有结构会怎么样？
- en: Drug discovery veterans might pause for a minute here. The fact is that it’s
    typically much harder experimentally to determine the structure of a complex than
    it is to measure a binding affinity. This makes sense intuitively. A binding affinity
    is a single number for a given biomolecular complex, while a structure is a rich
    3D snapshot. Predicting the binding affinity from the structure might feel a little
    bit like putting the cart before the horse!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 药物发现的老手可能会在这里停顿一分钟。事实是，在实验上确定一个复杂结构要比测量结合亲和力更困难。这在直觉上是有道理的。结合亲和力是给定生物分子复合物的一个单一数字，而结构是一个丰富的三维快照。从结构预测结合亲和力可能感觉有点本末倒置！
- en: There are a couple of answers to this (fair) accusation. The first is that the
    problem of determining the binding affinity of a biomolecular system is a physically
    interesting problem in its own right. Checking that we can accurately predict
    such binding affinities is a worthy test problem to benchmark our machine learning
    methods and can serve as a stepping stone to designing deep architectures capable
    of understanding sophisticated biophysical systems.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个（公平的）指责有几个答案。第一个是确定生物分子系统的结合亲和力是一个物理上有趣的问题。检查我们能否准确预测这种结合亲和力是一个值得的测试问题，可以用来评估我们的机器学习方法，并可以作为设计能够理解复杂生物物理系统的深度架构的基石。
- en: The second answer is that we can use existing computational tooling, such as
    “docking” software, to predict approximate structures for a protein–ligand complex
    given that we have a structure for the protein in isolation. While predicting
    a protein structure directly is a formidable challenge, it’s somewhat easier to
    predict the structure of a protein–ligand complex when you already have the protein
    structure. So, you might well be able to make useful predictions with the system
    we will create in this case study by pairing it with a docking engine. Indeed,
    DeepChem has support for this use case, but we will not delve into this more advanced
    feature in this chapter.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个答案是，我们可以使用现有的计算工具，比如“对接”软件，来预测蛋白质-配体复合物的近似结构，只要我们有蛋白质的结构。虽然直接预测蛋白质结构是一个艰巨的挑战，但在已有蛋白质结构的情况下，预测蛋白质-配体复合物的结构就相对容易一些。因此，在这个案例研究中，通过将其与对接引擎配对，您可能能够使用我们将创建的系统进行有用的预测。事实上，DeepChem支持这种用例，但在本章中我们不会深入探讨这一更高级的功能。
- en: In general, when doing machine learning, it can be particularly useful to take
    a look at individual data points or files within a dataset. In the [code repository
    associated with this book](https://github.com/deepchem/DeepLearningLifeSciences),
    we’ve included the PDB file for a protein–ligand complex called 2D3U. It contains
    information about the amino acids (also called residues) of the protein.In addition,
    the PDB file contains the coordinates of each atom in 3D space. The units for
    these coordinates are angstroms (1 angstrom is <math><msup><mn>10</mn> <mrow><mo>-</mo><mn>10</mn></mrow></msup></math>
    meters). The origin of this coordinate system is arbitrarily set to help in visualizing
    the protein, and is often set at the centroid of the protein. We recommend taking
    a minute to open this file in a text editor and take a look.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，在进行机器学习时，查看数据集中的单个数据点或文件可能特别有用。在与本书相关的[代码存储库](https://github.com/deepchem/DeepLearningLifeSciences)中，我们包含了一个名为2D3U的蛋白质-配体复合物的PDB文件。它包含有关蛋白质的氨基酸（也称为残基）的信息。此外，PDB文件包含每个原子在三维空间中的坐标。这些坐标的单位是埃（1埃等于10的负10次方米）。这个坐标系的原点是任意设置的，以帮助可视化蛋白质，并且通常设置在蛋白质的质心处。我们建议花一分钟时间在文本编辑器中打开这个文件并查看一下。
- en: Why Is an Amino Acid Called a Residue?
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么氨基酸被称为残基？
- en: As you spend more time working with biophysical data, you will commonly come
    across the terminology of an amino acid being called a *residue*. This refers
    to the chemistry of how proteins are formed. When two amino acids are joined together
    in a growing chain, an oxygen and two hydrogens are removed. A “residue” is what
    remains of an amino acid after this reaction takes place.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当您花更多时间处理生物物理数据时，您将经常遇到将氨基酸称为“残基”的术语。这涉及到蛋白质形成的化学过程。当两个氨基酸在一个不断增长的链中连接在一起时，一个氧和两个氢被移除。在这个反应发生后，所谓的“残基”就是氨基酸剩余的部分。
- en: It can be very hard to understand the contents of a PDB file, so let’s visualize
    a protein. We will use the [NGLview](https://github.com/arose/nglview) visualization
    package, which integrates well with Jupyter notebooks. In the notebook associated
    with this chapter in the code repository, you will be able to manipulate and interact
    with the visualized protein. For now, [Figure 5-10](#twod3u-protein-ligand) shows
    a visualization of a protein–ligand complex (2D3U) generated within the Jupyter
    notebook.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 理解PDB文件的内容可能非常困难，因此让我们可视化一个蛋白质。我们将使用[NGLview](https://github.com/arose/nglview)可视化包，它与Jupyter笔记本很好地集成。在与本章相关的代码存储库中的笔记本中，您将能够操纵和与可视化的蛋白质进行交互。目前，[图5-10](#twod3u-protein-ligand)显示了在Jupyter笔记本中生成的蛋白质-配体复合物（2D3U）的可视化。
- en: '![A visualization of the 2D3U protein–ligand complex from the PDBBind dataset.
    Note that the protein is represented in cartoon format for ease of visualization,
    and that the ligand (near the top-right corner) is represented in ball-and-stick
    format for full detail.](Images/dlls_0510.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![来自PDBBind数据集的2D3U蛋白质-配体复合物的可视化。请注意，为了方便可视化，蛋白质以卡通格式表示，而配体（靠近右上角）以球棒格式表示以获得完整细节。](Images/dlls_0510.png)'
- en: Figure 5-10\. A visualization of the 2D3U protein–ligand complex from the PDBBind
    dataset. Note that the protein is represented in cartoon format for ease of visualization,
    and that the ligand (near the top-right corner) is represented in ball-and-stick
    format for full detail.
  id: totrans-110
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-10。来自PDBBind数据集的2D3U蛋白质-配体复合物的可视化。请注意，为了方便可视化，蛋白质以卡通格式表示，而配体（靠近右上角）以球棒格式表示以获得完整细节。
- en: Notice how the ligand rests in a sort of “pocket” in the protein. You can see
    this more clearly by rotating the visualization to look at it from different sides.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意配体如何位于蛋白质的一种“口袋”中。通过旋转可视化以从不同角度观察，您可以更清楚地看到这一点。
- en: Protein Visualization Tools
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 蛋白质可视化工具
- en: Given the importance of visualizing proteins to work with them, there are a
    number of protein visualization tools available. While NGLview has amazing Jupyter
    integration, it’s more common to see other tools, such as [VMD](https://www.ks.uiuc.edu/Research/vmd/),
    [PyMOL](https://pymol.org), or [Chimera](https://www.cgl.ucsf.edu/chimera/), in
    use by professional drug discoverers. Note, however, that these tools are often
    not fully open source, and may not feature a developer-friendly API. Nevertheless,
    if you plan to spend significant time working with protein structures, using one
    of these more established tools is probably still worth the trade-off.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到可视化蛋白质对于处理它们的重要性，有许多蛋白质可视化工具可供选择。虽然NGLview具有令人惊叹的Jupyter集成功能，但更常见的是看到其他工具，如[VMD](https://www.ks.uiuc.edu/Research/vmd/)，[PyMOL](https://pymol.org)，或[Chimera](https://www.cgl.ucsf.edu/chimera/)，被专业的药物发现者使用。然而，请注意，这些工具通常并非完全开源，并且可能没有开发人员友好的API。尽管如此，如果您计划花费大量时间处理蛋白质结构，使用其中一个更成熟的工具可能仍然值得权衡。
- en: Featurizing the PDBBind Dataset
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对PDBBind数据集进行特征化
- en: 'Let’s start by building a `RdkitGridFeaturizer`object that we can inspect:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从构建一个我们可以检查的`RdkitGridFeaturizer`对象开始：
- en: '[PRE0]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: There are a number of options here, so let’s pause and consider what they mean.
    The `sanitize=True` flag asks the featurizer to try to clean up any structures
    it is given. Recall from our earlier discussion that structures are often malformed.
    The sanitization step will attempt to fix any obvious errors that it detects.
    Setting `flatten=True` asks the featurizer to output a one-dimensional feature
    vector for each input structure.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有许多选项，让我们暂停一下并考虑它们的含义。`sanitize=True`标志要求特征化器尝试清理给定的任何结构。回想一下我们之前讨论过的，结构经常存在错误。清理步骤将尝试修复它检测到的任何明显错误。设置`flatten=True`要求特征化器为每个输入结构输出一个一维特征向量。
- en: 'The `feature_types` flag sets the types of biophysical and chemical features
    that the `RdkitGridFeaturizer` will attempt to detect in input structures. Note
    the presence of many of the chemical bonds we discussed earlier in the chapter:
    hydrogen bonds, salt bridges, etc. Finally, the option `voxel_width=2.0` sets
    the size of the voxels making up the grid to 2 angstroms. The `RdkitGridFeaturizer`
    converts a protein to a voxelized representation for use in extracting useful
    features. For each spatial voxel, it counts biophysical features and also computes
    a local fingerprint vector. The `RdkitGridFeaturizer` computes two different types
    of fingerprints, the ECFP and SPLIF fingerprints.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`feature_types`标志设置了`RdkitGridFeaturizer`将尝试在输入结构中检测的生物物理和化学特征的类型。请注意，许多我们在本章前面讨论过的化学键的存在：氢键，盐桥等。最后，选项`voxel_width=2.0`将组成网格的体素的大小设置为2埃。`RdkitGridFeaturizer`将蛋白质转换为体素化表示，以用于提取有用的特征。对于每个空间体素，它计算生物物理特征，并计算一个局部指纹向量。`RdkitGridFeaturizer`计算两种不同类型的指纹，即ECFP和SPLIF指纹。'
- en: Voxelization
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 体素化
- en: What is voxelization? Broadly put, a voxel is the 3D analogue of a pixel (see
    [Figure 5-11](#a_voxelized_representation_of_a_sphere_note_how_each_voxel_represents)).
    Just as pixelized representations of images can be extraordinarily useful for
    handling imaging data, voxelized representations can be critical when working
    with 3D data.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是体素化？广义上说，体素是像素的三维模拟（参见[图5-11](#a_voxelized_representation_of_a_sphere_note_how_each_voxel_represents)）。正如图像的像素化表示对处理图像数据非常有用一样，体素化表示在处理3D数据时也非常关键。
- en: '![A voxelized representation of a sphere. Note how each voxel represents a
    spatial cube of input.](Images/dlls_0511.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![一个球的体素化表示。请注意每个体素代表一个输入的空间立方体。](Images/dlls_0511.png)'
- en: Figure 5-11\. A voxelized representation of a sphere. Note how each voxel represents
    a spatial cube of input.
  id: totrans-122
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-11。一个球的体素化表示。请注意每个体素代表一个输入的空间立方体。
- en: 'We are now ready to load the PDBBind dataset. We don’t actually need to use
    the featurizer we just defined: MoleculeNet will take care of it for us. If we
    include the flag `featurizer="grid"` when loading the dataset, it will perform
    grid featurization automatically:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备加载PDBBind数据集。实际上，我们不需要使用刚刚定义的特征化器：MoleculeNet会为我们处理。如果在加载数据集时包含标志`featurizer="grid"`，它将自动执行网格特征化：
- en: '[PRE1]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: With this snippet, we’ve loaded and featurized the core subset of PDBBind. On
    a fast computer, this should run within 10 minutes. Featurizing the refined subset
    will take a couple of hours on a modern server.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这段代码片段，我们已经加载并对PDBBind的核心子集进行了特征化。在一台快速计算机上，这应该在10分钟内运行。在现代服务器上，对精炼子集进行特征化将需要几个小时。
- en: 'Now that we have the data in hand, let’s start building some machine learning
    models. We’ll first train a classical model called a *random forest*:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经掌握了数据，让我们开始构建一些机器学习模型。我们将首先训练一个称为*随机森林*的经典模型：
- en: '[PRE2]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'As an alternative, we will also try building a neural network for predicting
    protein–ligand binding. We can use the `dc.models.MultitaskRegressor` class to
    build an MLP with two hidden layers. We set the widths of the hidden layers to
    2,000 and 1,000, respectively, and use 50% dropout to reduce overfitting.:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 作为替代方案，我们还将尝试构建一个用于预测蛋白质-配体结合的神经网络。我们可以使用`dc.models.MultitaskRegressor`类构建一个具有两个隐藏层的MLP。我们将隐藏层的宽度分别设置为2,000和1,000，并使用50%的丢失率来减少过度拟合。
- en: '[PRE3]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Baseline Models
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基线模型
- en: Deep learning models are tricky to optimize correctly at times. It’s easy for
    even experienced practitioners to make errors when tuning a deep model. For this
    reason, it’s critical to construct a baseline model that is more robust, even
    if it perhaps has lower performance.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 深度学习模型有时很难正确优化。即使是经验丰富的从业者在调整深度模型时也很容易出错。因此，构建一个更加稳健的基线模型至关重要，即使它可能表现较低。
- en: Random forests are very useful choices for baselines. They often offer strong
    performance on learning tasks with relatively small amounts of tuning. A random
    forest classifier constructs many “decision tree” classifiers, each using only
    a random subset of the available features, then combines the individual decisions
    of these classifiers via a majority vote.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 随机森林是基线的非常有用选择。它们通常在学习任务中表现出色，而且调整量相对较小。随机森林分类器构建许多“决策树”分类器，每个分类器仅使用可用特征的随机子集，然后通过多数投票结合这些分类器的个别决策。
- en: Scikit-learn is an invaluable package for constructing simple machine learning
    baselines. We will use scikit-learn to construct a baseline model in this chapter,
    using the `RdkitGridFeaturizer` to featurize complexes as inputs to random forests.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: Scikit-learn是一个无价的包，用于构建简单的机器学习基线。我们将在本章中使用scikit-learn构建一个基线模型，使用`RdkitGridFeaturizer`将复合物特征化为随机森林的输入。
- en: 'Now that we have a trained model, we can proceed to checking its accuracy.
    In order to evaluate the accuracy of the model, we have to first define a suitable
    metric. Let’s use the Pearson R² score. This is a number between –1 and 1, where
    0 indicates no correlation between the true and predicted labels, and 1 indicates
    perfect correlation:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了一个经过训练的模型，我们可以继续检查其准确性。为了评估模型的准确性，我们必须首先定义一个合适的指标。让我们使用Pearson R²分数。这是一个介于-1和1之间的数字，其中0表示真实标签和预测标签之间没有相关性，1表示完美相关性。
- en: '[PRE4]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s now evaluate the accuracy of the models on the training and test datasets
    according to this metric. The code to do so is again shared between both models:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们根据这个指标评估模型在训练和测试数据集上的准确性。执行此操作的代码在两个模型之间再次共享：
- en: '[PRE5]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Many Architectures Can Have Similar Effects
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 许多架构可能具有类似的效果
- en: In this section, we provide code examples of how to use an MLP with grid featurization
    to model protein–ligand structures in DeepChem. It’s important to note that there
    are a number of alternative deep architectures that have similar effects. There’s
    been a line of work on using 3D convolutional networks to predict protein–ligand
    binding interactions using voxel-based featurizations. Other work has used variants
    of the graph convolutions we saw in the previous chapter to handle macromolecular
    complexes.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们提供了如何使用带有网格特征化的MLP来模拟DeepChem中的蛋白质-配体结构的代码示例。重要的是要注意，还有许多其他深度架构具有类似的效果。已经有一系列关于使用3D卷积网络来预测基于体素特征化的蛋白质-配体结合相互作用的工作。其他工作使用了我们在上一章中看到的图卷积的变体来处理大分子复合物。
- en: What are the differences between these architectures? So far, it looks like
    most of them have similar predictive power. We use grid featurization because
    there’s a tuned implementation in DeepChem, but other models may serve your needs
    as well. Future versions of DeepChem will likely include additional architectures
    for this purpose.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这些架构之间有什么区别？到目前为止，大多数看起来具有类似的预测能力。我们使用网格特征化是因为DeepChem中有一个经过调整的实现，但其他模型也可能满足您的需求。未来版本的DeepChem可能会包括额外的架构来实现这一目的。
- en: For the random forest, this reports a training set score of 0.979 but a test
    set score of only 0.133\. It does an excellent job of reproducing the training
    data but a very poor job of predicting the test data. Apparently it is overfitting
    quite badly.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 对于随机森林，这报告了训练集得分为0.979，但测试集得分仅为0.133。它在复制训练数据方面表现出色，但在预测测试数据方面表现非常糟糕。显然，它过度拟合得相当严重。
- en: In comparison, the neural network has a training set score of 0.990 and a test
    set score of 0.359\. It does slightly better on the training set and much better
    on the test set. There clearly is still overfitting going on, but the amount is
    reduced and the overall ability of the model to predict new data is much higher.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，神经网络的训练集得分为0.990，测试集得分为0.359。它在训练集上稍微表现更好，在测试集上表现更好。显然仍然存在过度拟合，但过度拟合的程度有所减少，模型预测新数据的整体能力更高。
- en: Knowing the correlation coefficient is a powerful first step toward understanding
    the model we’ve built, but it’s always useful to directly visualize how our predictions
    correlate with actual experimental data. [Figure 5-12](#true_versus_predicted_labels_for_the_two_models_when_run_on_the_test_set)
    shows the true versus predicted labels for each of the models when run on the
    test set. We immediately see how the neural network’s predictions are much more
    closely correlated with the true data than are the random forest’s.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 了解相关系数是理解我们构建的模型的一个强大的第一步，但直接可视化我们的预测与实际实验数据的相关性总是有用的。[图5-12](#true_versus_predicted_labels_for_the_two_models_when_run_on_the_test_set)显示了在测试集上运行时每个模型的真实与预测标签。我们立即看到神经网络的预测与真实数据的相关性要比随机森林的要更接近。
- en: '![True versus predicted labels for the two models when run on the test set.](Images/dlls_0512.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![在测试集上运行时两个模型的真实与预测标签。](Images/dlls_0512.png)'
- en: Figure 5-12\. True versus predicted labels for the two models when run on the
    test set.
  id: totrans-145
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-12。在测试集上运行时两个模型的真实与预测标签。
- en: Conclusion
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this chapter you’ve learned about applying deep learning to biophysical systems,
    and in particular to the problem of predicting the binding affinity of protein–ligand
    systems. You might be curious how general the skills you’ve learned are. Could
    you apply these same models and techniques to understand other biophysical datasets?
    Let’s do a quick survey and tour.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您已经了解了将深度学习应用于生物物理系统，特别是解决预测蛋白质-配体系统结合亲和力的问题。您可能会好奇您学到的技能有多通用。您能否应用这些相同的模型和技术来理解其他生物物理数据集？让我们进行一个快速调查和浏览。
- en: Protein–protein and protein–DNA systems follow the same basic physics as protein–ligand
    systems at a high level. The same hydrogen bonds, salt bridges, pi-stacking interactions,
    and so on play a critical role. Could we just reuse the code from this chapter
    to analyze such systems? The answer turns out to be a little complicated. Many
    of the physical interactions that drive protein–ligand interactions are driven
    by charged dynamics. Protein–protein dynamics may, on the other hand, be driven
    more by bulk hydrophobic interactions. We won’t dig deeply into the meaning of
    these interactions, but they have a different character qualitatively than protein–ligand
    interactions to some degree. This could mean that `RdkitGridFeaturizer` wouldn’t
    do a good job of characterizing these interactions. On the other hand, it’s possible
    that the atomic convolutional models might do a better job of handling these systems,
    since much less about the physics of interactions is hardcoded into these deep
    models.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 蛋白质-蛋白质和蛋白质-DNA系统在高层次上遵循与蛋白质-配体系统相同的基本物理规律。相同的氢键，盐桥，π-堆积相互作用等起着关键作用。我们能否只是重复使用本章的代码来分析这些系统？答案是有点复杂的。驱动蛋白质-配体相互作用的许多物理相互作用是由带电动力驱动的。另一方面，蛋白质-蛋白质动力学可能更多地受到体积疏水相互作用的影响。我们不会深入探讨这些相互作用的含义，但它们在某种程度上在质性上与蛋白质-配体相互作用有所不同。这可能意味着`RdkitGridFeaturizer`可能无法很好地表征这些相互作用。另一方面，原子卷积模型可能更适合处理这些系统，因为这些深度模型中的物理相互作用的信息要少得多。
- en: That said, there remains a significant problem of scale. The atomic convolutional
    models are quite slow to train and require a great deal of memory. Scaling these
    models to handle larger protein–protein systems would require additional work
    on the engineering end. The DeepChem development team is hard at work on these
    and other challenges, but more time may be required before these efforts reach
    fruition.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，规模仍然存在一个重大问题。原子卷积模型训练速度相当慢，需要大量内存。将这些模型扩展到处理更大的蛋白质-蛋白质系统需要在工程端进行额外的工作。DeepChem开发团队正在努力解决这些和其他挑战，但可能需要更多时间才能取得成果。
- en: Antibody–antigen interactions are another form of critical biophysical interaction.
    Antibodies are Y-shaped proteins (see [Figure 5-13](#diagram_of_antibody_antigen_interaction))
    that have a variable “antigen-binding site” used to bind antigens. Here, antigens
    are molecules associated with a particular pathogen. Cells grown in culture can
    be harnessed to create antibodies that target specific antigens. If all the cells
    in a culture are clones of a given cell, then the antibodies produced will be
    identical. Such “monoclonal antibodies” have recently found wide therapeutic use.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 抗体-抗原相互作用是另一种关键的生物物理相互作用形式。抗体是Y形蛋白质（参见[图5-13](#diagram_of_antibody_antigen_interaction)），具有可变的“抗原结合位点”，用于结合抗原。在这里，抗原是与特定病原体相关的分子。在培养中生长的细胞可以被利用来产生针对特定抗原的抗体。如果培养中的所有细胞都是给定细胞的克隆体，那么产生的抗体将是相同的。这种“单克隆抗体”最近在广泛的治疗中得到了应用。
- en: '![Diagram of antibody–antigen interaction](Images/dlls_0513.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![抗体-抗原相互作用示意图](Images/dlls_0513.png)'
- en: 'Figure 5-13\. Diagram of antibody–antigen interaction. (Source: [Wikimedia](https://en.wikipedia.org/wiki/Antibody#/media/File:Antibody.svg).)'
  id: totrans-152
  prefs:
  - PREF_H6
  type: TYPE_NORMAL
  zh: 图5-13。抗体-抗原相互作用示意图。 (来源：[Wikimedia](https://en.wikipedia.org/wiki/Antibody#/media/File:Antibody.svg).)
- en: The design of antibodies has primarily been an experimental science until now.
    Part of this is due to the challenges involved in getting a 3D antibody structure.
    However, modeling the complex antigen–antibody binding site has also proven a
    challenge. Some of the techniques we’ve covered in this chapter may find fruitful
    use in antibody–antigen binding modeling over the next few years.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 抗体的设计直到现在主要还是一门实验科学。部分原因是由于获取3D抗体结构所涉及的挑战。然而，建模复杂的抗原-抗体结合位点也被证明是一个挑战。我们在本章中介绍的一些技术可能在未来几年内在抗体-抗原结合建模中找到有益的用途。
- en: We’ve also alluded to the importance of dynamics in understanding protein physics.
    Could we not do deep learning directly on protein simulations to understand which
    ligands could bind to the protein? In principle yes, but formidable challenges
    remain. Some companies are actively working on this challenge, but good open source
    tooling is not yet available.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提到了动态在理解蛋白质物理学中的重要性。我们不能直接在蛋白质模拟中进行深度学习，以了解哪些配体可以结合到蛋白质吗？原则上是可以的，但仍然存在巨大的挑战。一些公司正在积极应对这一挑战，但良好的开源工具尚未推出。
- en: In [Chapter 11](ch11.xhtml#a_virtual_screening_workflow_example), we will return
    to some biophysical techniques and show how these models can be very useful for
    drug discovery work.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第11章](ch11.xhtml#a_virtual_screening_workflow_example)中，我们将回顾一些生物物理技术，并展示这些模型如何对药物发现工作非常有用。
