["```py\ntrain, valid, test = load_images_DR(split='random', seed=123)\n\n```", "```py\n# Define and build model\nmodel = DRModel(\n    n_init_kernel=32,\n    batch_size=32,\n    learning_rate=1e-5,\n    augment=True,\n    model_dir='./test_model')\n\n```", "```py\nwget https://s3-us-west-1.amazonaws.com/deepchem.io/featurized_datasets\n  /DR_model.tar.gz \nmv DR_model.tar.gz test_model/\ncd test_model\ntar -zxvf DR_model.tar.gz\ncd ..\n\n```", "```py\nmodel.build()\nmodel.restore(checkpoint=\"./test_model/model-84384\")\n\n```", "```py\nmetrics = [\n    dc.metrics.Metric(DRAccuracy, mode='classification'),\n    dc.metrics.Metric(QuadWeightedKappa, mode='classification')\n]\n\n```", "```py\nmodel.evaluate(test, metrics)\n\n```", "```py\ncomputed_metrics: [0.9339595787076572]\ncomputed_metrics: [0.8494075470551462]\n\n```", "```py\nfor i in range(10):\n  model.fit(train, nb_epoch=10)\n  model.evaluate(train, metrics)\n  model.evaluate(valid, metrics)\n  model.evaluate(valid, cm)\n  model.evaluate(test, metrics)\n  model.evaluate(test, cm)\n\n```"]