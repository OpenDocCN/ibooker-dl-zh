["```py\n$ apt-get install imagemagick\n$ mogrify -resize 800x600 *.jpg\n```", "```py\n$ find . -type f | awk -F. '!a[$NF]++{print $NF}' |\nxargs -I{} mogrify -resize 800x600 *.jpg\n```", "```py\nclass_for_box1 box1_x box1_y box1_w box1_h\nclass_for_box2 box2_x box2_y box2_w box2_h\n```", "```py\n    $ python xml_to_csv.py -i {path to cats training dataset} -o {path to output\n    train_labels.csv}\n    ```", "```py\n    $ python xml_to_csv.py -i {path to cats test dataset} -o {path to\n    test_labels.csv}\n    ```", "```py\n    item {\n        id: 1\n        name: 'cat'\n    }\n    ```", "```py\n    $ python generate_tfrecord.py \\\n    --csv_input={path to train_labels.csv} \\\n    --output_path={path to train.tfrecord} \\\n    --image_dir={path to cat training dataset}\n\n    $ python generate_tfrecord.py \\\n    --csv_input={path to test_labels.csv} \\\n    --output_path={path to test.tfrecord} \\\n    --image_dir={path to cat test dataset}\n    ```", "```py\n$ saved_model_cli show --dir ssd_mobilenet_v2_coco_2018_03_29/saved_model \\\n--tag_set serve \\\n--signature_def serving_default\n```", "```py\nThe given SavedModel SignatureDef contains the following input(s):\n  inputs['inputs'] tensor_info:\n      dtype: DT_UINT8\n      shape: (-1, -1, -1, 3)\n      name: image_tensor:0\nThe given SavedModel SignatureDef contains the following output(s):\n  outputs['detection_boxes'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1, 100, 4)\n      name: detection_boxes:0\n  outputs['detection_classes'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1, 100)\n      name: detection_classes:0\n  outputs['detection_scores'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1, 100)\n      name: detection_scores:0\n  outputs['num_detections'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1)\n      name: num_detections:0\n  outputs['raw_detection_boxes'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1, -1, 4)\n      name: raw_detection_boxes:0\n  outputs['raw_detection_scores'] tensor_info:\n      dtype: DT_FLOAT\n      shape: (-1, -1, 2)\n      name: raw_detection_scores:0\nMethod name is: tensorflow/serving/predict\n```", "```py\n$ cp object_detection/samples/configs/ssd_mobilenet_v2_coco.config\n./pipeline.config\n$ vim pipeline.config\n```", "```py\n$ cd object_detection/\n$ python model_main.py \\\n--pipeline_config_path=../pipeline.config \\\n--logtostderr \\\n--model_dir=training/\n```", "```py\nAverage Precision (AP) @[ IoU=0.50:0.95 | area=all | maxDets=100 ] = 0.760\n```", "```py\n$ ls training/\n\ncheckpoint                                   model.ckpt-13960.meta\neval_0                                       model.ckpt-16747.data-00000-of-00001\nevents.out.tfevents.1554684330.computername  model.ckpt-16747.index\nevents.out.tfevents.1554684359.computername  model.ckpt-16747.meta\nexport                                       model.ckpt-19526.data-00000-of-00001\ngraph.pbtxt                                model.ckpt-19526.index\nlabel_map.pbtxt                            model.ckpt-19526.meta\nmodel.ckpt-11180.data-00000-of-00001       model.ckpt-20000.data-00000-of-00001\nmodel.ckpt-11180.index                     model.ckpt-20000.index\nmodel.ckpt-11180.meta                      model.ckpt-20000.meta\nmodel.ckpt-13960.data-00000-of-00001       pipeline.config\nmodel.ckpt-13960.index\n```", "```py\n$ python export_inference_graph.py \\\n--input_type=image_tensor \\\n--pipeline_config_path=training/pipeline.config \\\n--output_directory=inference_graph \\\n--trained_checkpoint_prefix=training/model.ckpt-20000\n```", "```py\n=========================Options=========================\n-max_depth                  10000\n-step                       -1\n...\n\n==================Model Analysis Report==================\n...\nDoc:\nscope: The nodes in the model graph are organized by\ntheir names, which is hierarchical like filesystem.\nparam: Number of parameters (in the Variable).\n\nProfile:\nnode name | # parameters\n_TFProfRoot (--/3.72m params)\n BoxPredictor_0 (--/93.33k params)\n    BoxPredictor_0/BoxEncodingPredictor\n    (--/62.22k params)\n      BoxPredictor_0/BoxEncodingPredictor/biases\n      (12, 12/12 params)\n ...     \nFeatureExtractor (--/2.84m params)\n...\n```", "```py\n$ python export_tflite_ssd_graph.py \\\n--pipeline_config_path=training/pipeline.config \\\n--trained_checkpoint_prefix=training/model.ckpt-20000 \\\n--output_directory=tflite_model \\\n--add_postprocessing_op=true\n```", "```py\n$ ls tflite_model\ntflite_graph.pb\ntflite_graph.pbtxt\n```", "```py\n$ tflite_convert --graph_def_file=tflite_model/tflite_graph.pb \\\n--output_file=tflite_model/cats.tflite \\\n--input_arrays=normalized_input_image_tensor \\\n--output_arrays='TFLite_Detection_PostProcess','TFLite_Detection_PostProcess:1','TFLi\nte_Detection_PostProcess:2','TFLite_Detection_PostProcess:3' \\\n--input_shape=1,800,600,3 \\\n--allow_custom_ops\n```"]